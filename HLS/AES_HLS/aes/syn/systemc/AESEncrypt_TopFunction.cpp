// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AESEncrypt_TopFunction.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AESEncrypt_TopFunction::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AESEncrypt_TopFunction::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state1 = "1";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state2 = "10";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state3 = "100";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state4 = "1000";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state5 = "10000";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state6 = "100000";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> AESEncrypt_TopFunction::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> AESEncrypt_TopFunction::ap_const_lv1_0 = "0";
const sc_lv<1> AESEncrypt_TopFunction::ap_const_lv1_1 = "1";
const sc_lv<2> AESEncrypt_TopFunction::ap_const_lv2_0 = "00";
const sc_lv<2> AESEncrypt_TopFunction::ap_const_lv2_2 = "10";
const sc_lv<2> AESEncrypt_TopFunction::ap_const_lv2_3 = "11";
const sc_lv<2> AESEncrypt_TopFunction::ap_const_lv2_1 = "1";
const int AESEncrypt_TopFunction::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_1 = "1";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_2 = "10";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_3 = "11";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_4 = "100";
const sc_lv<3> AESEncrypt_TopFunction::ap_const_lv3_0 = "000";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_6 = "110";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_7 = "111";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_8 = "1000";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_9 = "1001";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_5 = "101";
const sc_lv<8> AESEncrypt_TopFunction::ap_const_lv8_0 = "00000000";
const sc_lv<3> AESEncrypt_TopFunction::ap_const_lv3_4 = "100";
const sc_lv<3> AESEncrypt_TopFunction::ap_const_lv3_1 = "1";
const sc_lv<32> AESEncrypt_TopFunction::ap_const_lv32_A = "1010";
const bool AESEncrypt_TopFunction::ap_const_boolean_0 = false;
const bool AESEncrypt_TopFunction::ap_const_boolean_1 = true;

AESEncrypt_TopFunction::AESEncrypt_TopFunction(sc_module_name name) : sc_module(name), mVcdFile(0) {
    AESEncrypt_TopFunction_control_s_axi_U = new AESEncrypt_TopFunction_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("AESEncrypt_TopFunction_control_s_axi_U");
    AESEncrypt_TopFunction_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    AESEncrypt_TopFunction_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    AESEncrypt_TopFunction_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    AESEncrypt_TopFunction_control_s_axi_U->WVALID(s_axi_control_WVALID);
    AESEncrypt_TopFunction_control_s_axi_U->WREADY(s_axi_control_WREADY);
    AESEncrypt_TopFunction_control_s_axi_U->WDATA(s_axi_control_WDATA);
    AESEncrypt_TopFunction_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    AESEncrypt_TopFunction_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    AESEncrypt_TopFunction_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    AESEncrypt_TopFunction_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    AESEncrypt_TopFunction_control_s_axi_U->RVALID(s_axi_control_RVALID);
    AESEncrypt_TopFunction_control_s_axi_U->RREADY(s_axi_control_RREADY);
    AESEncrypt_TopFunction_control_s_axi_U->RDATA(s_axi_control_RDATA);
    AESEncrypt_TopFunction_control_s_axi_U->RRESP(s_axi_control_RRESP);
    AESEncrypt_TopFunction_control_s_axi_U->BVALID(s_axi_control_BVALID);
    AESEncrypt_TopFunction_control_s_axi_U->BREADY(s_axi_control_BREADY);
    AESEncrypt_TopFunction_control_s_axi_U->BRESP(s_axi_control_BRESP);
    AESEncrypt_TopFunction_control_s_axi_U->ACLK(ap_clk);
    AESEncrypt_TopFunction_control_s_axi_U->ARESET(ap_rst_n_inv);
    AESEncrypt_TopFunction_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    AESEncrypt_TopFunction_control_s_axi_U->ap_start(ap_start);
    AESEncrypt_TopFunction_control_s_axi_U->interrupt(interrupt);
    AESEncrypt_TopFunction_control_s_axi_U->ap_ready(ap_ready);
    AESEncrypt_TopFunction_control_s_axi_U->ap_done(ap_done);
    AESEncrypt_TopFunction_control_s_axi_U->ap_idle(ap_idle);
    matrixText_data_V_U = new AESEncrypt_TopFunjbC("matrixText_data_V_U");
    matrixText_data_V_U->clk(ap_clk);
    matrixText_data_V_U->reset(ap_rst_n_inv);
    matrixText_data_V_U->address0(matrixText_data_V_address0);
    matrixText_data_V_U->ce0(matrixText_data_V_ce0);
    matrixText_data_V_U->we0(matrixText_data_V_we0);
    matrixText_data_V_U->d0(matrixText_data_V_d0);
    matrixText_data_V_U->q0(matrixText_data_V_q0);
    matrixText_data_V_U->address1(matrixText_data_V_address1);
    matrixText_data_V_U->ce1(matrixText_data_V_ce1);
    matrixText_data_V_U->we1(matrixText_data_V_we1);
    matrixText_data_V_U->d1(matrixText_data_V_d1);
    matrixText_data_V_U->q1(matrixText_data_V_q1);
    matrixKey_data_V_U = new AESEncrypt_TopFunkbM("matrixKey_data_V_U");
    matrixKey_data_V_U->clk(ap_clk);
    matrixKey_data_V_U->reset(ap_rst_n_inv);
    matrixKey_data_V_U->address0(matrixKey_data_V_address0);
    matrixKey_data_V_U->ce0(matrixKey_data_V_ce0);
    matrixKey_data_V_U->we0(matrixKey_data_V_we0);
    matrixKey_data_V_U->d0(matrixKey_data_V_d0);
    matrixKey_data_V_U->q0(matrixKey_data_V_q0);
    matrixKey_data_V_U->address1(grp_axi2matrix_fu_226_state_data_V_address1);
    matrixKey_data_V_U->ce1(matrixKey_data_V_ce1);
    matrixKey_data_V_U->we1(matrixKey_data_V_we1);
    matrixKey_data_V_U->d1(grp_axi2matrix_fu_226_state_data_V_d1);
    grp_aesEncrypt_fu_174 = new aesEncrypt("grp_aesEncrypt_fu_174");
    grp_aesEncrypt_fu_174->ap_clk(ap_clk);
    grp_aesEncrypt_fu_174->ap_rst(ap_rst_n_inv);
    grp_aesEncrypt_fu_174->ap_start(grp_aesEncrypt_fu_174_ap_start);
    grp_aesEncrypt_fu_174->ap_done(grp_aesEncrypt_fu_174_ap_done);
    grp_aesEncrypt_fu_174->ap_idle(grp_aesEncrypt_fu_174_ap_idle);
    grp_aesEncrypt_fu_174->ap_ready(grp_aesEncrypt_fu_174_ap_ready);
    grp_aesEncrypt_fu_174->state_data_V_address0(grp_aesEncrypt_fu_174_state_data_V_address0);
    grp_aesEncrypt_fu_174->state_data_V_ce0(grp_aesEncrypt_fu_174_state_data_V_ce0);
    grp_aesEncrypt_fu_174->state_data_V_we0(grp_aesEncrypt_fu_174_state_data_V_we0);
    grp_aesEncrypt_fu_174->state_data_V_d0(grp_aesEncrypt_fu_174_state_data_V_d0);
    grp_aesEncrypt_fu_174->state_data_V_q0(matrixText_data_V_q0);
    grp_aesEncrypt_fu_174->state_data_V_address1(grp_aesEncrypt_fu_174_state_data_V_address1);
    grp_aesEncrypt_fu_174->state_data_V_ce1(grp_aesEncrypt_fu_174_state_data_V_ce1);
    grp_aesEncrypt_fu_174->state_data_V_we1(grp_aesEncrypt_fu_174_state_data_V_we1);
    grp_aesEncrypt_fu_174->state_data_V_d1(grp_aesEncrypt_fu_174_state_data_V_d1);
    grp_aesEncrypt_fu_174->state_data_V_q1(matrixText_data_V_q1);
    grp_aesEncrypt_fu_174->masterKey_data_V_address0(grp_aesEncrypt_fu_174_masterKey_data_V_address0);
    grp_aesEncrypt_fu_174->masterKey_data_V_ce0(grp_aesEncrypt_fu_174_masterKey_data_V_ce0);
    grp_aesEncrypt_fu_174->masterKey_data_V_q0(matrixKey_data_V_q0);
    grp_matrix2axi_fu_188 = new matrix2axi("grp_matrix2axi_fu_188");
    grp_matrix2axi_fu_188->ap_clk(ap_clk);
    grp_matrix2axi_fu_188->ap_rst(ap_rst_n_inv);
    grp_matrix2axi_fu_188->ap_start(grp_matrix2axi_fu_188_ap_start);
    grp_matrix2axi_fu_188->ap_done(grp_matrix2axi_fu_188_ap_done);
    grp_matrix2axi_fu_188->ap_idle(grp_matrix2axi_fu_188_ap_idle);
    grp_matrix2axi_fu_188->ap_ready(grp_matrix2axi_fu_188_ap_ready);
    grp_matrix2axi_fu_188->state_data_V_address0(grp_matrix2axi_fu_188_state_data_V_address0);
    grp_matrix2axi_fu_188->state_data_V_ce0(grp_matrix2axi_fu_188_state_data_V_ce0);
    grp_matrix2axi_fu_188->state_data_V_q0(matrixText_data_V_q0);
    grp_matrix2axi_fu_188->state_data_V_address1(grp_matrix2axi_fu_188_state_data_V_address1);
    grp_matrix2axi_fu_188->state_data_V_ce1(grp_matrix2axi_fu_188_state_data_V_ce1);
    grp_matrix2axi_fu_188->state_data_V_q1(matrixText_data_V_q1);
    grp_matrix2axi_fu_188->stream_out_TDATA(grp_matrix2axi_fu_188_stream_out_TDATA);
    grp_matrix2axi_fu_188->stream_out_TVALID(grp_matrix2axi_fu_188_stream_out_TVALID);
    grp_matrix2axi_fu_188->stream_out_TREADY(grp_matrix2axi_fu_188_stream_out_TREADY);
    grp_matrix2axi_fu_188->stream_out_TKEEP(grp_matrix2axi_fu_188_stream_out_TKEEP);
    grp_matrix2axi_fu_188->stream_out_TSTRB(grp_matrix2axi_fu_188_stream_out_TSTRB);
    grp_matrix2axi_fu_188->stream_out_TUSER(grp_matrix2axi_fu_188_stream_out_TUSER);
    grp_matrix2axi_fu_188->stream_out_TLAST(grp_matrix2axi_fu_188_stream_out_TLAST);
    grp_matrix2axi_fu_188->stream_out_TID(grp_matrix2axi_fu_188_stream_out_TID);
    grp_matrix2axi_fu_188->stream_out_TDEST(grp_matrix2axi_fu_188_stream_out_TDEST);
    grp_axi2matrix_fu_207 = new axi2matrix("grp_axi2matrix_fu_207");
    grp_axi2matrix_fu_207->ap_clk(ap_clk);
    grp_axi2matrix_fu_207->ap_rst(ap_rst_n_inv);
    grp_axi2matrix_fu_207->ap_start(grp_axi2matrix_fu_207_ap_start);
    grp_axi2matrix_fu_207->ap_done(grp_axi2matrix_fu_207_ap_done);
    grp_axi2matrix_fu_207->ap_idle(grp_axi2matrix_fu_207_ap_idle);
    grp_axi2matrix_fu_207->ap_ready(grp_axi2matrix_fu_207_ap_ready);
    grp_axi2matrix_fu_207->stream_in_key_TDATA(stream_in_text_V_data_V_0_data_out);
    grp_axi2matrix_fu_207->stream_in_key_TVALID(grp_axi2matrix_fu_207_stream_in_key_TVALID);
    grp_axi2matrix_fu_207->stream_in_key_TREADY(grp_axi2matrix_fu_207_stream_in_key_TREADY);
    grp_axi2matrix_fu_207->stream_in_key_TKEEP(stream_in_text_V_keep_V_0_data_out);
    grp_axi2matrix_fu_207->stream_in_key_TSTRB(stream_in_text_V_strb_V_0_data_out);
    grp_axi2matrix_fu_207->stream_in_key_TUSER(stream_in_text_V_user_V_0_data_out);
    grp_axi2matrix_fu_207->stream_in_key_TLAST(stream_in_text_V_last_V_0_data_out);
    grp_axi2matrix_fu_207->stream_in_key_TID(stream_in_text_V_id_V_0_data_out);
    grp_axi2matrix_fu_207->stream_in_key_TDEST(stream_in_text_V_dest_V_0_data_out);
    grp_axi2matrix_fu_207->state_data_V_address0(grp_axi2matrix_fu_207_state_data_V_address0);
    grp_axi2matrix_fu_207->state_data_V_ce0(grp_axi2matrix_fu_207_state_data_V_ce0);
    grp_axi2matrix_fu_207->state_data_V_we0(grp_axi2matrix_fu_207_state_data_V_we0);
    grp_axi2matrix_fu_207->state_data_V_d0(grp_axi2matrix_fu_207_state_data_V_d0);
    grp_axi2matrix_fu_207->state_data_V_address1(grp_axi2matrix_fu_207_state_data_V_address1);
    grp_axi2matrix_fu_207->state_data_V_ce1(grp_axi2matrix_fu_207_state_data_V_ce1);
    grp_axi2matrix_fu_207->state_data_V_we1(grp_axi2matrix_fu_207_state_data_V_we1);
    grp_axi2matrix_fu_207->state_data_V_d1(grp_axi2matrix_fu_207_state_data_V_d1);
    grp_axi2matrix_fu_226 = new axi2matrix("grp_axi2matrix_fu_226");
    grp_axi2matrix_fu_226->ap_clk(ap_clk);
    grp_axi2matrix_fu_226->ap_rst(ap_rst_n_inv);
    grp_axi2matrix_fu_226->ap_start(grp_axi2matrix_fu_226_ap_start);
    grp_axi2matrix_fu_226->ap_done(grp_axi2matrix_fu_226_ap_done);
    grp_axi2matrix_fu_226->ap_idle(grp_axi2matrix_fu_226_ap_idle);
    grp_axi2matrix_fu_226->ap_ready(grp_axi2matrix_fu_226_ap_ready);
    grp_axi2matrix_fu_226->stream_in_key_TDATA(stream_in_key_V_data_V_0_data_out);
    grp_axi2matrix_fu_226->stream_in_key_TVALID(grp_axi2matrix_fu_226_stream_in_key_TVALID);
    grp_axi2matrix_fu_226->stream_in_key_TREADY(grp_axi2matrix_fu_226_stream_in_key_TREADY);
    grp_axi2matrix_fu_226->stream_in_key_TKEEP(stream_in_key_V_keep_V_0_data_out);
    grp_axi2matrix_fu_226->stream_in_key_TSTRB(stream_in_key_V_strb_V_0_data_out);
    grp_axi2matrix_fu_226->stream_in_key_TUSER(stream_in_key_V_user_V_0_data_out);
    grp_axi2matrix_fu_226->stream_in_key_TLAST(stream_in_key_V_last_V_0_data_out);
    grp_axi2matrix_fu_226->stream_in_key_TID(stream_in_key_V_id_V_0_data_out);
    grp_axi2matrix_fu_226->stream_in_key_TDEST(stream_in_key_V_dest_V_0_data_out);
    grp_axi2matrix_fu_226->state_data_V_address0(grp_axi2matrix_fu_226_state_data_V_address0);
    grp_axi2matrix_fu_226->state_data_V_ce0(grp_axi2matrix_fu_226_state_data_V_ce0);
    grp_axi2matrix_fu_226->state_data_V_we0(grp_axi2matrix_fu_226_state_data_V_we0);
    grp_axi2matrix_fu_226->state_data_V_d0(grp_axi2matrix_fu_226_state_data_V_d0);
    grp_axi2matrix_fu_226->state_data_V_address1(grp_axi2matrix_fu_226_state_data_V_address1);
    grp_axi2matrix_fu_226->state_data_V_ce1(grp_axi2matrix_fu_226_state_data_V_ce1);
    grp_axi2matrix_fu_226->state_data_V_we1(grp_axi2matrix_fu_226_state_data_V_we1);
    grp_axi2matrix_fu_226->state_data_V_d1(grp_axi2matrix_fu_226_state_data_V_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( stream_out_V_data_V_1_ack_in );
    sensitive << ( stream_out_V_keep_V_1_ack_in );
    sensitive << ( stream_out_V_strb_V_1_ack_in );
    sensitive << ( stream_out_V_user_V_1_ack_in );
    sensitive << ( stream_out_V_last_V_1_ack_in );
    sensitive << ( stream_out_V_id_V_1_ack_in );
    sensitive << ( stream_out_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state6_on_subcall_done);
    sensitive << ( grp_axi2matrix_fu_207_ap_done );
    sensitive << ( grp_axi2matrix_fu_226_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( stream_out_V_data_V_1_ack_in );
    sensitive << ( stream_out_V_keep_V_1_ack_in );
    sensitive << ( stream_out_V_strb_V_1_ack_in );
    sensitive << ( stream_out_V_user_V_1_ack_in );
    sensitive << ( stream_out_V_last_V_1_ack_in );
    sensitive << ( stream_out_V_id_V_1_ack_in );
    sensitive << ( stream_out_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( stream_out_V_data_V_1_ack_in );
    sensitive << ( stream_out_V_keep_V_1_ack_in );
    sensitive << ( stream_out_V_strb_V_1_ack_in );
    sensitive << ( stream_out_V_user_V_1_ack_in );
    sensitive << ( stream_out_V_last_V_1_ack_in );
    sensitive << ( stream_out_V_id_V_1_ack_in );
    sensitive << ( stream_out_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond11_i2_fu_245_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i1_reg_130 );

    SC_METHOD(thread_exitcond11_i_fu_295_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_i_reg_152 );

    SC_METHOD(thread_exitcond_i6_fu_269_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_i5_reg_141 );

    SC_METHOD(thread_exitcond_i_fu_319_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_0_i_reg_163 );

    SC_METHOD(thread_grp_aesEncrypt_fu_174_ap_start);
    sensitive << ( grp_aesEncrypt_fu_174_ap_start_reg );

    SC_METHOD(thread_grp_axi2matrix_fu_207_ap_start);
    sensitive << ( grp_axi2matrix_fu_207_ap_start_reg );

    SC_METHOD(thread_grp_axi2matrix_fu_207_stream_in_key_TVALID);
    sensitive << ( stream_in_text_V_dest_V_0_state );

    SC_METHOD(thread_grp_axi2matrix_fu_226_ap_start);
    sensitive << ( grp_axi2matrix_fu_226_ap_start_reg );

    SC_METHOD(thread_grp_axi2matrix_fu_226_stream_in_key_TVALID);
    sensitive << ( stream_in_key_V_dest_V_0_state );

    SC_METHOD(thread_grp_matrix2axi_fu_188_ap_start);
    sensitive << ( grp_matrix2axi_fu_188_ap_start_reg );

    SC_METHOD(thread_grp_matrix2axi_fu_188_stream_out_TREADY);
    sensitive << ( stream_out_V_dest_V_1_state );

    SC_METHOD(thread_i_1_fu_301_p2);
    sensitive << ( i_0_i_reg_152 );

    SC_METHOD(thread_i_fu_251_p2);
    sensitive << ( i_0_i1_reg_130 );

    SC_METHOD(thread_j_1_fu_325_p2);
    sensitive << ( j_0_i_reg_163 );

    SC_METHOD(thread_j_fu_275_p2);
    sensitive << ( j_0_i5_reg_141 );

    SC_METHOD(thread_matrixKey_data_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_aesEncrypt_fu_174_masterKey_data_V_address0 );
    sensitive << ( grp_axi2matrix_fu_226_state_data_V_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_64_cast_fu_340_p1 );

    SC_METHOD(thread_matrixKey_data_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_aesEncrypt_fu_174_masterKey_data_V_ce0 );
    sensitive << ( grp_axi2matrix_fu_226_state_data_V_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixKey_data_V_ce1);
    sensitive << ( grp_axi2matrix_fu_226_state_data_V_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixKey_data_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_axi2matrix_fu_226_state_data_V_d0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixKey_data_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_axi2matrix_fu_226_state_data_V_we0 );
    sensitive << ( exitcond_i_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixKey_data_V_we1);
    sensitive << ( grp_axi2matrix_fu_226_state_data_V_we1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixText_data_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_address0 );
    sensitive << ( grp_matrix2axi_fu_188_state_data_V_address0 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_63_cast_fu_290_p1 );

    SC_METHOD(thread_matrixText_data_V_address1);
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_address1 );
    sensitive << ( grp_matrix2axi_fu_188_state_data_V_address1 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_address1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixText_data_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_ce0 );
    sensitive << ( grp_matrix2axi_fu_188_state_data_V_ce0 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixText_data_V_ce1);
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_ce1 );
    sensitive << ( grp_matrix2axi_fu_188_state_data_V_ce1 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_ce1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixText_data_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_d0 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_d0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixText_data_V_d1);
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_d1 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_d1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixText_data_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_we0 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_we0 );
    sensitive << ( exitcond_i6_fu_269_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrixText_data_V_we1);
    sensitive << ( grp_aesEncrypt_fu_174_state_data_V_we1 );
    sensitive << ( grp_axi2matrix_fu_207_state_data_V_we1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_TREADY);
    sensitive << ( stream_in_key_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_key_V_data_V_0_ack_in);
    sensitive << ( stream_in_key_V_data_V_0_state );

    SC_METHOD(thread_stream_in_key_V_data_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_226_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_V_data_V_0_data_out);
    sensitive << ( stream_in_key_V_data_V_0_payload_A );
    sensitive << ( stream_in_key_V_data_V_0_payload_B );
    sensitive << ( stream_in_key_V_data_V_0_sel );

    SC_METHOD(thread_stream_in_key_V_data_V_0_load_A);
    sensitive << ( stream_in_key_V_data_V_0_sel_wr );
    sensitive << ( stream_in_key_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_data_V_0_load_B);
    sensitive << ( stream_in_key_V_data_V_0_sel_wr );
    sensitive << ( stream_in_key_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_data_V_0_sel);
    sensitive << ( stream_in_key_V_data_V_0_sel_rd );

    SC_METHOD(thread_stream_in_key_V_data_V_0_state_cmp_full);
    sensitive << ( stream_in_key_V_data_V_0_state );

    SC_METHOD(thread_stream_in_key_V_data_V_0_vld_in);
    sensitive << ( stream_in_key_TVALID );

    SC_METHOD(thread_stream_in_key_V_data_V_0_vld_out);
    sensitive << ( stream_in_key_V_data_V_0_state );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_ack_in);
    sensitive << ( stream_in_key_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_226_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_data_out);
    sensitive << ( stream_in_key_V_dest_V_0_payload_A );
    sensitive << ( stream_in_key_V_dest_V_0_payload_B );
    sensitive << ( stream_in_key_V_dest_V_0_sel );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_load_A);
    sensitive << ( stream_in_key_V_dest_V_0_sel_wr );
    sensitive << ( stream_in_key_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_load_B);
    sensitive << ( stream_in_key_V_dest_V_0_sel_wr );
    sensitive << ( stream_in_key_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_sel);
    sensitive << ( stream_in_key_V_dest_V_0_sel_rd );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_state_cmp_full);
    sensitive << ( stream_in_key_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_vld_in);
    sensitive << ( stream_in_key_TVALID );

    SC_METHOD(thread_stream_in_key_V_dest_V_0_vld_out);
    sensitive << ( stream_in_key_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_key_V_id_V_0_ack_in);
    sensitive << ( stream_in_key_V_id_V_0_state );

    SC_METHOD(thread_stream_in_key_V_id_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_226_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_V_id_V_0_data_out);
    sensitive << ( stream_in_key_V_id_V_0_payload_A );
    sensitive << ( stream_in_key_V_id_V_0_payload_B );
    sensitive << ( stream_in_key_V_id_V_0_sel );

    SC_METHOD(thread_stream_in_key_V_id_V_0_load_A);
    sensitive << ( stream_in_key_V_id_V_0_sel_wr );
    sensitive << ( stream_in_key_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_id_V_0_load_B);
    sensitive << ( stream_in_key_V_id_V_0_sel_wr );
    sensitive << ( stream_in_key_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_id_V_0_sel);
    sensitive << ( stream_in_key_V_id_V_0_sel_rd );

    SC_METHOD(thread_stream_in_key_V_id_V_0_state_cmp_full);
    sensitive << ( stream_in_key_V_id_V_0_state );

    SC_METHOD(thread_stream_in_key_V_id_V_0_vld_in);
    sensitive << ( stream_in_key_TVALID );

    SC_METHOD(thread_stream_in_key_V_id_V_0_vld_out);
    sensitive << ( stream_in_key_V_id_V_0_state );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_ack_in);
    sensitive << ( stream_in_key_V_keep_V_0_state );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_226_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_data_out);
    sensitive << ( stream_in_key_V_keep_V_0_payload_A );
    sensitive << ( stream_in_key_V_keep_V_0_payload_B );
    sensitive << ( stream_in_key_V_keep_V_0_sel );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_load_A);
    sensitive << ( stream_in_key_V_keep_V_0_sel_wr );
    sensitive << ( stream_in_key_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_load_B);
    sensitive << ( stream_in_key_V_keep_V_0_sel_wr );
    sensitive << ( stream_in_key_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_sel);
    sensitive << ( stream_in_key_V_keep_V_0_sel_rd );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_state_cmp_full);
    sensitive << ( stream_in_key_V_keep_V_0_state );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_vld_in);
    sensitive << ( stream_in_key_TVALID );

    SC_METHOD(thread_stream_in_key_V_keep_V_0_vld_out);
    sensitive << ( stream_in_key_V_keep_V_0_state );

    SC_METHOD(thread_stream_in_key_V_last_V_0_ack_in);
    sensitive << ( stream_in_key_V_last_V_0_state );

    SC_METHOD(thread_stream_in_key_V_last_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_226_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_V_last_V_0_data_out);
    sensitive << ( stream_in_key_V_last_V_0_payload_A );
    sensitive << ( stream_in_key_V_last_V_0_payload_B );
    sensitive << ( stream_in_key_V_last_V_0_sel );

    SC_METHOD(thread_stream_in_key_V_last_V_0_load_A);
    sensitive << ( stream_in_key_V_last_V_0_sel_wr );
    sensitive << ( stream_in_key_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_last_V_0_load_B);
    sensitive << ( stream_in_key_V_last_V_0_sel_wr );
    sensitive << ( stream_in_key_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_last_V_0_sel);
    sensitive << ( stream_in_key_V_last_V_0_sel_rd );

    SC_METHOD(thread_stream_in_key_V_last_V_0_state_cmp_full);
    sensitive << ( stream_in_key_V_last_V_0_state );

    SC_METHOD(thread_stream_in_key_V_last_V_0_vld_in);
    sensitive << ( stream_in_key_TVALID );

    SC_METHOD(thread_stream_in_key_V_last_V_0_vld_out);
    sensitive << ( stream_in_key_V_last_V_0_state );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_ack_in);
    sensitive << ( stream_in_key_V_strb_V_0_state );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_226_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_data_out);
    sensitive << ( stream_in_key_V_strb_V_0_payload_A );
    sensitive << ( stream_in_key_V_strb_V_0_payload_B );
    sensitive << ( stream_in_key_V_strb_V_0_sel );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_load_A);
    sensitive << ( stream_in_key_V_strb_V_0_sel_wr );
    sensitive << ( stream_in_key_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_load_B);
    sensitive << ( stream_in_key_V_strb_V_0_sel_wr );
    sensitive << ( stream_in_key_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_sel);
    sensitive << ( stream_in_key_V_strb_V_0_sel_rd );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_state_cmp_full);
    sensitive << ( stream_in_key_V_strb_V_0_state );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_vld_in);
    sensitive << ( stream_in_key_TVALID );

    SC_METHOD(thread_stream_in_key_V_strb_V_0_vld_out);
    sensitive << ( stream_in_key_V_strb_V_0_state );

    SC_METHOD(thread_stream_in_key_V_user_V_0_ack_in);
    sensitive << ( stream_in_key_V_user_V_0_state );

    SC_METHOD(thread_stream_in_key_V_user_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_226_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_key_V_user_V_0_data_out);
    sensitive << ( stream_in_key_V_user_V_0_payload_A );
    sensitive << ( stream_in_key_V_user_V_0_payload_B );
    sensitive << ( stream_in_key_V_user_V_0_sel );

    SC_METHOD(thread_stream_in_key_V_user_V_0_load_A);
    sensitive << ( stream_in_key_V_user_V_0_sel_wr );
    sensitive << ( stream_in_key_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_user_V_0_load_B);
    sensitive << ( stream_in_key_V_user_V_0_sel_wr );
    sensitive << ( stream_in_key_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_key_V_user_V_0_sel);
    sensitive << ( stream_in_key_V_user_V_0_sel_rd );

    SC_METHOD(thread_stream_in_key_V_user_V_0_state_cmp_full);
    sensitive << ( stream_in_key_V_user_V_0_state );

    SC_METHOD(thread_stream_in_key_V_user_V_0_vld_in);
    sensitive << ( stream_in_key_TVALID );

    SC_METHOD(thread_stream_in_key_V_user_V_0_vld_out);
    sensitive << ( stream_in_key_V_user_V_0_state );

    SC_METHOD(thread_stream_in_text_TREADY);
    sensitive << ( stream_in_text_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_text_V_data_V_0_ack_in);
    sensitive << ( stream_in_text_V_data_V_0_state );

    SC_METHOD(thread_stream_in_text_V_data_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_207_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_text_V_data_V_0_data_out);
    sensitive << ( stream_in_text_V_data_V_0_payload_A );
    sensitive << ( stream_in_text_V_data_V_0_payload_B );
    sensitive << ( stream_in_text_V_data_V_0_sel );

    SC_METHOD(thread_stream_in_text_V_data_V_0_load_A);
    sensitive << ( stream_in_text_V_data_V_0_sel_wr );
    sensitive << ( stream_in_text_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_data_V_0_load_B);
    sensitive << ( stream_in_text_V_data_V_0_sel_wr );
    sensitive << ( stream_in_text_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_data_V_0_sel);
    sensitive << ( stream_in_text_V_data_V_0_sel_rd );

    SC_METHOD(thread_stream_in_text_V_data_V_0_state_cmp_full);
    sensitive << ( stream_in_text_V_data_V_0_state );

    SC_METHOD(thread_stream_in_text_V_data_V_0_vld_in);
    sensitive << ( stream_in_text_TVALID );

    SC_METHOD(thread_stream_in_text_V_data_V_0_vld_out);
    sensitive << ( stream_in_text_V_data_V_0_state );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_ack_in);
    sensitive << ( stream_in_text_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_207_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_data_out);
    sensitive << ( stream_in_text_V_dest_V_0_payload_A );
    sensitive << ( stream_in_text_V_dest_V_0_payload_B );
    sensitive << ( stream_in_text_V_dest_V_0_sel );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_load_A);
    sensitive << ( stream_in_text_V_dest_V_0_sel_wr );
    sensitive << ( stream_in_text_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_load_B);
    sensitive << ( stream_in_text_V_dest_V_0_sel_wr );
    sensitive << ( stream_in_text_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_sel);
    sensitive << ( stream_in_text_V_dest_V_0_sel_rd );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_state_cmp_full);
    sensitive << ( stream_in_text_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_vld_in);
    sensitive << ( stream_in_text_TVALID );

    SC_METHOD(thread_stream_in_text_V_dest_V_0_vld_out);
    sensitive << ( stream_in_text_V_dest_V_0_state );

    SC_METHOD(thread_stream_in_text_V_id_V_0_ack_in);
    sensitive << ( stream_in_text_V_id_V_0_state );

    SC_METHOD(thread_stream_in_text_V_id_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_207_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_text_V_id_V_0_data_out);
    sensitive << ( stream_in_text_V_id_V_0_payload_A );
    sensitive << ( stream_in_text_V_id_V_0_payload_B );
    sensitive << ( stream_in_text_V_id_V_0_sel );

    SC_METHOD(thread_stream_in_text_V_id_V_0_load_A);
    sensitive << ( stream_in_text_V_id_V_0_sel_wr );
    sensitive << ( stream_in_text_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_id_V_0_load_B);
    sensitive << ( stream_in_text_V_id_V_0_sel_wr );
    sensitive << ( stream_in_text_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_id_V_0_sel);
    sensitive << ( stream_in_text_V_id_V_0_sel_rd );

    SC_METHOD(thread_stream_in_text_V_id_V_0_state_cmp_full);
    sensitive << ( stream_in_text_V_id_V_0_state );

    SC_METHOD(thread_stream_in_text_V_id_V_0_vld_in);
    sensitive << ( stream_in_text_TVALID );

    SC_METHOD(thread_stream_in_text_V_id_V_0_vld_out);
    sensitive << ( stream_in_text_V_id_V_0_state );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_ack_in);
    sensitive << ( stream_in_text_V_keep_V_0_state );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_207_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_data_out);
    sensitive << ( stream_in_text_V_keep_V_0_payload_A );
    sensitive << ( stream_in_text_V_keep_V_0_payload_B );
    sensitive << ( stream_in_text_V_keep_V_0_sel );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_load_A);
    sensitive << ( stream_in_text_V_keep_V_0_sel_wr );
    sensitive << ( stream_in_text_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_load_B);
    sensitive << ( stream_in_text_V_keep_V_0_sel_wr );
    sensitive << ( stream_in_text_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_sel);
    sensitive << ( stream_in_text_V_keep_V_0_sel_rd );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_state_cmp_full);
    sensitive << ( stream_in_text_V_keep_V_0_state );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_vld_in);
    sensitive << ( stream_in_text_TVALID );

    SC_METHOD(thread_stream_in_text_V_keep_V_0_vld_out);
    sensitive << ( stream_in_text_V_keep_V_0_state );

    SC_METHOD(thread_stream_in_text_V_last_V_0_ack_in);
    sensitive << ( stream_in_text_V_last_V_0_state );

    SC_METHOD(thread_stream_in_text_V_last_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_207_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_text_V_last_V_0_data_out);
    sensitive << ( stream_in_text_V_last_V_0_payload_A );
    sensitive << ( stream_in_text_V_last_V_0_payload_B );
    sensitive << ( stream_in_text_V_last_V_0_sel );

    SC_METHOD(thread_stream_in_text_V_last_V_0_load_A);
    sensitive << ( stream_in_text_V_last_V_0_sel_wr );
    sensitive << ( stream_in_text_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_last_V_0_load_B);
    sensitive << ( stream_in_text_V_last_V_0_sel_wr );
    sensitive << ( stream_in_text_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_last_V_0_sel);
    sensitive << ( stream_in_text_V_last_V_0_sel_rd );

    SC_METHOD(thread_stream_in_text_V_last_V_0_state_cmp_full);
    sensitive << ( stream_in_text_V_last_V_0_state );

    SC_METHOD(thread_stream_in_text_V_last_V_0_vld_in);
    sensitive << ( stream_in_text_TVALID );

    SC_METHOD(thread_stream_in_text_V_last_V_0_vld_out);
    sensitive << ( stream_in_text_V_last_V_0_state );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_ack_in);
    sensitive << ( stream_in_text_V_strb_V_0_state );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_207_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_data_out);
    sensitive << ( stream_in_text_V_strb_V_0_payload_A );
    sensitive << ( stream_in_text_V_strb_V_0_payload_B );
    sensitive << ( stream_in_text_V_strb_V_0_sel );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_load_A);
    sensitive << ( stream_in_text_V_strb_V_0_sel_wr );
    sensitive << ( stream_in_text_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_load_B);
    sensitive << ( stream_in_text_V_strb_V_0_sel_wr );
    sensitive << ( stream_in_text_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_sel);
    sensitive << ( stream_in_text_V_strb_V_0_sel_rd );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_state_cmp_full);
    sensitive << ( stream_in_text_V_strb_V_0_state );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_vld_in);
    sensitive << ( stream_in_text_TVALID );

    SC_METHOD(thread_stream_in_text_V_strb_V_0_vld_out);
    sensitive << ( stream_in_text_V_strb_V_0_state );

    SC_METHOD(thread_stream_in_text_V_user_V_0_ack_in);
    sensitive << ( stream_in_text_V_user_V_0_state );

    SC_METHOD(thread_stream_in_text_V_user_V_0_ack_out);
    sensitive << ( grp_axi2matrix_fu_207_stream_in_key_TREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_stream_in_text_V_user_V_0_data_out);
    sensitive << ( stream_in_text_V_user_V_0_payload_A );
    sensitive << ( stream_in_text_V_user_V_0_payload_B );
    sensitive << ( stream_in_text_V_user_V_0_sel );

    SC_METHOD(thread_stream_in_text_V_user_V_0_load_A);
    sensitive << ( stream_in_text_V_user_V_0_sel_wr );
    sensitive << ( stream_in_text_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_user_V_0_load_B);
    sensitive << ( stream_in_text_V_user_V_0_sel_wr );
    sensitive << ( stream_in_text_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_text_V_user_V_0_sel);
    sensitive << ( stream_in_text_V_user_V_0_sel_rd );

    SC_METHOD(thread_stream_in_text_V_user_V_0_state_cmp_full);
    sensitive << ( stream_in_text_V_user_V_0_state );

    SC_METHOD(thread_stream_in_text_V_user_V_0_vld_in);
    sensitive << ( stream_in_text_TVALID );

    SC_METHOD(thread_stream_in_text_V_user_V_0_vld_out);
    sensitive << ( stream_in_text_V_user_V_0_state );

    SC_METHOD(thread_stream_out_TDATA);
    sensitive << ( stream_out_V_data_V_1_data_out );

    SC_METHOD(thread_stream_out_TDEST);
    sensitive << ( stream_out_V_dest_V_1_data_out );

    SC_METHOD(thread_stream_out_TID);
    sensitive << ( stream_out_V_id_V_1_data_out );

    SC_METHOD(thread_stream_out_TKEEP);
    sensitive << ( stream_out_V_keep_V_1_data_out );

    SC_METHOD(thread_stream_out_TLAST);
    sensitive << ( stream_out_V_last_V_1_data_out );

    SC_METHOD(thread_stream_out_TSTRB);
    sensitive << ( stream_out_V_strb_V_1_data_out );

    SC_METHOD(thread_stream_out_TUSER);
    sensitive << ( stream_out_V_user_V_1_data_out );

    SC_METHOD(thread_stream_out_TVALID);
    sensitive << ( stream_out_V_dest_V_1_state );

    SC_METHOD(thread_stream_out_V_data_V_1_ack_in);
    sensitive << ( stream_out_V_data_V_1_state );

    SC_METHOD(thread_stream_out_V_data_V_1_ack_out);
    sensitive << ( stream_out_TREADY );

    SC_METHOD(thread_stream_out_V_data_V_1_data_out);
    sensitive << ( stream_out_V_data_V_1_payload_A );
    sensitive << ( stream_out_V_data_V_1_payload_B );
    sensitive << ( stream_out_V_data_V_1_sel );

    SC_METHOD(thread_stream_out_V_data_V_1_load_A);
    sensitive << ( stream_out_V_data_V_1_sel_wr );
    sensitive << ( stream_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_data_V_1_load_B);
    sensitive << ( stream_out_V_data_V_1_sel_wr );
    sensitive << ( stream_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_data_V_1_sel);
    sensitive << ( stream_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_stream_out_V_data_V_1_state_cmp_full);
    sensitive << ( stream_out_V_data_V_1_state );

    SC_METHOD(thread_stream_out_V_data_V_1_vld_in);
    sensitive << ( grp_matrix2axi_fu_188_stream_out_TVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_stream_out_V_data_V_1_vld_out);
    sensitive << ( stream_out_V_data_V_1_state );

    SC_METHOD(thread_stream_out_V_dest_V_1_ack_in);
    sensitive << ( stream_out_V_dest_V_1_state );

    SC_METHOD(thread_stream_out_V_dest_V_1_ack_out);
    sensitive << ( stream_out_TREADY );

    SC_METHOD(thread_stream_out_V_dest_V_1_data_out);
    sensitive << ( stream_out_V_dest_V_1_payload_A );
    sensitive << ( stream_out_V_dest_V_1_payload_B );
    sensitive << ( stream_out_V_dest_V_1_sel );

    SC_METHOD(thread_stream_out_V_dest_V_1_load_A);
    sensitive << ( stream_out_V_dest_V_1_sel_wr );
    sensitive << ( stream_out_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_dest_V_1_load_B);
    sensitive << ( stream_out_V_dest_V_1_sel_wr );
    sensitive << ( stream_out_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_dest_V_1_sel);
    sensitive << ( stream_out_V_dest_V_1_sel_rd );

    SC_METHOD(thread_stream_out_V_dest_V_1_state_cmp_full);
    sensitive << ( stream_out_V_dest_V_1_state );

    SC_METHOD(thread_stream_out_V_dest_V_1_vld_in);
    sensitive << ( grp_matrix2axi_fu_188_stream_out_TVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_stream_out_V_dest_V_1_vld_out);
    sensitive << ( stream_out_V_dest_V_1_state );

    SC_METHOD(thread_stream_out_V_id_V_1_ack_in);
    sensitive << ( stream_out_V_id_V_1_state );

    SC_METHOD(thread_stream_out_V_id_V_1_ack_out);
    sensitive << ( stream_out_TREADY );

    SC_METHOD(thread_stream_out_V_id_V_1_data_out);
    sensitive << ( stream_out_V_id_V_1_payload_A );
    sensitive << ( stream_out_V_id_V_1_payload_B );
    sensitive << ( stream_out_V_id_V_1_sel );

    SC_METHOD(thread_stream_out_V_id_V_1_load_A);
    sensitive << ( stream_out_V_id_V_1_sel_wr );
    sensitive << ( stream_out_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_id_V_1_load_B);
    sensitive << ( stream_out_V_id_V_1_sel_wr );
    sensitive << ( stream_out_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_id_V_1_sel);
    sensitive << ( stream_out_V_id_V_1_sel_rd );

    SC_METHOD(thread_stream_out_V_id_V_1_state_cmp_full);
    sensitive << ( stream_out_V_id_V_1_state );

    SC_METHOD(thread_stream_out_V_id_V_1_vld_in);
    sensitive << ( grp_matrix2axi_fu_188_stream_out_TVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_stream_out_V_id_V_1_vld_out);
    sensitive << ( stream_out_V_id_V_1_state );

    SC_METHOD(thread_stream_out_V_keep_V_1_ack_in);
    sensitive << ( stream_out_V_keep_V_1_state );

    SC_METHOD(thread_stream_out_V_keep_V_1_ack_out);
    sensitive << ( stream_out_TREADY );

    SC_METHOD(thread_stream_out_V_keep_V_1_data_out);
    sensitive << ( stream_out_V_keep_V_1_payload_A );
    sensitive << ( stream_out_V_keep_V_1_payload_B );
    sensitive << ( stream_out_V_keep_V_1_sel );

    SC_METHOD(thread_stream_out_V_keep_V_1_load_A);
    sensitive << ( stream_out_V_keep_V_1_sel_wr );
    sensitive << ( stream_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_keep_V_1_load_B);
    sensitive << ( stream_out_V_keep_V_1_sel_wr );
    sensitive << ( stream_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_keep_V_1_sel);
    sensitive << ( stream_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_stream_out_V_keep_V_1_state_cmp_full);
    sensitive << ( stream_out_V_keep_V_1_state );

    SC_METHOD(thread_stream_out_V_keep_V_1_vld_in);
    sensitive << ( grp_matrix2axi_fu_188_stream_out_TVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_stream_out_V_keep_V_1_vld_out);
    sensitive << ( stream_out_V_keep_V_1_state );

    SC_METHOD(thread_stream_out_V_last_V_1_ack_in);
    sensitive << ( stream_out_V_last_V_1_state );

    SC_METHOD(thread_stream_out_V_last_V_1_ack_out);
    sensitive << ( stream_out_TREADY );

    SC_METHOD(thread_stream_out_V_last_V_1_data_out);
    sensitive << ( stream_out_V_last_V_1_payload_A );
    sensitive << ( stream_out_V_last_V_1_payload_B );
    sensitive << ( stream_out_V_last_V_1_sel );

    SC_METHOD(thread_stream_out_V_last_V_1_load_A);
    sensitive << ( stream_out_V_last_V_1_sel_wr );
    sensitive << ( stream_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_last_V_1_load_B);
    sensitive << ( stream_out_V_last_V_1_sel_wr );
    sensitive << ( stream_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_last_V_1_sel);
    sensitive << ( stream_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_stream_out_V_last_V_1_state_cmp_full);
    sensitive << ( stream_out_V_last_V_1_state );

    SC_METHOD(thread_stream_out_V_last_V_1_vld_in);
    sensitive << ( grp_matrix2axi_fu_188_stream_out_TVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_stream_out_V_last_V_1_vld_out);
    sensitive << ( stream_out_V_last_V_1_state );

    SC_METHOD(thread_stream_out_V_strb_V_1_ack_in);
    sensitive << ( stream_out_V_strb_V_1_state );

    SC_METHOD(thread_stream_out_V_strb_V_1_ack_out);
    sensitive << ( stream_out_TREADY );

    SC_METHOD(thread_stream_out_V_strb_V_1_data_out);
    sensitive << ( stream_out_V_strb_V_1_payload_A );
    sensitive << ( stream_out_V_strb_V_1_payload_B );
    sensitive << ( stream_out_V_strb_V_1_sel );

    SC_METHOD(thread_stream_out_V_strb_V_1_load_A);
    sensitive << ( stream_out_V_strb_V_1_sel_wr );
    sensitive << ( stream_out_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_strb_V_1_load_B);
    sensitive << ( stream_out_V_strb_V_1_sel_wr );
    sensitive << ( stream_out_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_strb_V_1_sel);
    sensitive << ( stream_out_V_strb_V_1_sel_rd );

    SC_METHOD(thread_stream_out_V_strb_V_1_state_cmp_full);
    sensitive << ( stream_out_V_strb_V_1_state );

    SC_METHOD(thread_stream_out_V_strb_V_1_vld_in);
    sensitive << ( grp_matrix2axi_fu_188_stream_out_TVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_stream_out_V_strb_V_1_vld_out);
    sensitive << ( stream_out_V_strb_V_1_state );

    SC_METHOD(thread_stream_out_V_user_V_1_ack_in);
    sensitive << ( stream_out_V_user_V_1_state );

    SC_METHOD(thread_stream_out_V_user_V_1_ack_out);
    sensitive << ( stream_out_TREADY );

    SC_METHOD(thread_stream_out_V_user_V_1_data_out);
    sensitive << ( stream_out_V_user_V_1_payload_A );
    sensitive << ( stream_out_V_user_V_1_payload_B );
    sensitive << ( stream_out_V_user_V_1_sel );

    SC_METHOD(thread_stream_out_V_user_V_1_load_A);
    sensitive << ( stream_out_V_user_V_1_sel_wr );
    sensitive << ( stream_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_user_V_1_load_B);
    sensitive << ( stream_out_V_user_V_1_sel_wr );
    sensitive << ( stream_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_stream_out_V_user_V_1_sel);
    sensitive << ( stream_out_V_user_V_1_sel_rd );

    SC_METHOD(thread_stream_out_V_user_V_1_state_cmp_full);
    sensitive << ( stream_out_V_user_V_1_state );

    SC_METHOD(thread_stream_out_V_user_V_1_vld_in);
    sensitive << ( grp_matrix2axi_fu_188_stream_out_TVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_stream_out_V_user_V_1_vld_out);
    sensitive << ( stream_out_V_user_V_1_state );

    SC_METHOD(thread_tmp_20_cast_fu_331_p1);
    sensitive << ( j_0_i_reg_163 );

    SC_METHOD(thread_tmp_24_fu_285_p2);
    sensitive << ( tmp_60_cast_reg_353 );
    sensitive << ( tmp_cast_fu_281_p1 );

    SC_METHOD(thread_tmp_25_fu_335_p2);
    sensitive << ( tmp_62_cast_reg_374 );
    sensitive << ( tmp_20_cast_fu_331_p1 );

    SC_METHOD(thread_tmp_60_cast_fu_265_p1);
    sensitive << ( tmp_fu_257_p3 );

    SC_METHOD(thread_tmp_62_cast_fu_315_p1);
    sensitive << ( tmp_s_fu_307_p3 );

    SC_METHOD(thread_tmp_63_cast_fu_290_p1);
    sensitive << ( tmp_24_fu_285_p2 );

    SC_METHOD(thread_tmp_64_cast_fu_340_p1);
    sensitive << ( tmp_25_fu_335_p2 );

    SC_METHOD(thread_tmp_cast_fu_281_p1);
    sensitive << ( j_0_i5_reg_141 );

    SC_METHOD(thread_tmp_fu_257_p3);
    sensitive << ( i_0_i1_reg_130 );

    SC_METHOD(thread_tmp_s_fu_307_p3);
    sensitive << ( i_0_i_reg_152 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( stream_out_V_data_V_1_ack_in );
    sensitive << ( stream_out_V_keep_V_1_ack_in );
    sensitive << ( stream_out_V_strb_V_1_ack_in );
    sensitive << ( stream_out_V_user_V_1_ack_in );
    sensitive << ( stream_out_V_last_V_1_ack_in );
    sensitive << ( stream_out_V_id_V_1_ack_in );
    sensitive << ( stream_out_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond11_i2_fu_245_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond11_i_fu_295_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_aesEncrypt_fu_174_ap_done );
    sensitive << ( grp_matrix2axi_fu_188_ap_done );
    sensitive << ( exitcond_i6_fu_269_p2 );
    sensitive << ( exitcond_i_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_block_state6_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    stream_in_text_V_data_V_0_sel_rd = SC_LOGIC_0;
    stream_in_text_V_data_V_0_sel_wr = SC_LOGIC_0;
    stream_in_text_V_data_V_0_state = "00";
    stream_in_text_V_keep_V_0_sel_rd = SC_LOGIC_0;
    stream_in_text_V_keep_V_0_sel_wr = SC_LOGIC_0;
    stream_in_text_V_keep_V_0_state = "00";
    stream_in_text_V_strb_V_0_sel_rd = SC_LOGIC_0;
    stream_in_text_V_strb_V_0_sel_wr = SC_LOGIC_0;
    stream_in_text_V_strb_V_0_state = "00";
    stream_in_text_V_user_V_0_sel_rd = SC_LOGIC_0;
    stream_in_text_V_user_V_0_sel_wr = SC_LOGIC_0;
    stream_in_text_V_user_V_0_state = "00";
    stream_in_text_V_last_V_0_sel_rd = SC_LOGIC_0;
    stream_in_text_V_last_V_0_sel_wr = SC_LOGIC_0;
    stream_in_text_V_last_V_0_state = "00";
    stream_in_text_V_id_V_0_sel_rd = SC_LOGIC_0;
    stream_in_text_V_id_V_0_sel_wr = SC_LOGIC_0;
    stream_in_text_V_id_V_0_state = "00";
    stream_in_text_V_dest_V_0_sel_rd = SC_LOGIC_0;
    stream_in_text_V_dest_V_0_sel_wr = SC_LOGIC_0;
    stream_in_text_V_dest_V_0_state = "00";
    stream_in_key_V_data_V_0_sel_rd = SC_LOGIC_0;
    stream_in_key_V_data_V_0_sel_wr = SC_LOGIC_0;
    stream_in_key_V_data_V_0_state = "00";
    stream_in_key_V_keep_V_0_sel_rd = SC_LOGIC_0;
    stream_in_key_V_keep_V_0_sel_wr = SC_LOGIC_0;
    stream_in_key_V_keep_V_0_state = "00";
    stream_in_key_V_strb_V_0_sel_rd = SC_LOGIC_0;
    stream_in_key_V_strb_V_0_sel_wr = SC_LOGIC_0;
    stream_in_key_V_strb_V_0_state = "00";
    stream_in_key_V_user_V_0_sel_rd = SC_LOGIC_0;
    stream_in_key_V_user_V_0_sel_wr = SC_LOGIC_0;
    stream_in_key_V_user_V_0_state = "00";
    stream_in_key_V_last_V_0_sel_rd = SC_LOGIC_0;
    stream_in_key_V_last_V_0_sel_wr = SC_LOGIC_0;
    stream_in_key_V_last_V_0_state = "00";
    stream_in_key_V_id_V_0_sel_rd = SC_LOGIC_0;
    stream_in_key_V_id_V_0_sel_wr = SC_LOGIC_0;
    stream_in_key_V_id_V_0_state = "00";
    stream_in_key_V_dest_V_0_sel_rd = SC_LOGIC_0;
    stream_in_key_V_dest_V_0_sel_wr = SC_LOGIC_0;
    stream_in_key_V_dest_V_0_state = "00";
    stream_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    stream_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    stream_out_V_data_V_1_state = "00";
    stream_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    stream_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    stream_out_V_keep_V_1_state = "00";
    stream_out_V_strb_V_1_sel_rd = SC_LOGIC_0;
    stream_out_V_strb_V_1_sel_wr = SC_LOGIC_0;
    stream_out_V_strb_V_1_state = "00";
    stream_out_V_user_V_1_sel_rd = SC_LOGIC_0;
    stream_out_V_user_V_1_sel_wr = SC_LOGIC_0;
    stream_out_V_user_V_1_state = "00";
    stream_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    stream_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    stream_out_V_last_V_1_state = "00";
    stream_out_V_id_V_1_sel_rd = SC_LOGIC_0;
    stream_out_V_id_V_1_sel_wr = SC_LOGIC_0;
    stream_out_V_id_V_1_state = "00";
    stream_out_V_dest_V_1_sel_rd = SC_LOGIC_0;
    stream_out_V_dest_V_1_sel_wr = SC_LOGIC_0;
    stream_out_V_dest_V_1_state = "00";
    grp_aesEncrypt_fu_174_ap_start_reg = SC_LOGIC_0;
    grp_matrix2axi_fu_188_ap_start_reg = SC_LOGIC_0;
    grp_axi2matrix_fu_207_ap_start_reg = SC_LOGIC_0;
    grp_axi2matrix_fu_226_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AESEncrypt_TopFunction_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, stream_in_text_TDATA, "(port)stream_in_text_TDATA");
    sc_trace(mVcdFile, stream_in_text_TVALID, "(port)stream_in_text_TVALID");
    sc_trace(mVcdFile, stream_in_text_TREADY, "(port)stream_in_text_TREADY");
    sc_trace(mVcdFile, stream_in_text_TKEEP, "(port)stream_in_text_TKEEP");
    sc_trace(mVcdFile, stream_in_text_TSTRB, "(port)stream_in_text_TSTRB");
    sc_trace(mVcdFile, stream_in_text_TUSER, "(port)stream_in_text_TUSER");
    sc_trace(mVcdFile, stream_in_text_TLAST, "(port)stream_in_text_TLAST");
    sc_trace(mVcdFile, stream_in_text_TID, "(port)stream_in_text_TID");
    sc_trace(mVcdFile, stream_in_text_TDEST, "(port)stream_in_text_TDEST");
    sc_trace(mVcdFile, stream_in_key_TDATA, "(port)stream_in_key_TDATA");
    sc_trace(mVcdFile, stream_in_key_TVALID, "(port)stream_in_key_TVALID");
    sc_trace(mVcdFile, stream_in_key_TREADY, "(port)stream_in_key_TREADY");
    sc_trace(mVcdFile, stream_in_key_TKEEP, "(port)stream_in_key_TKEEP");
    sc_trace(mVcdFile, stream_in_key_TSTRB, "(port)stream_in_key_TSTRB");
    sc_trace(mVcdFile, stream_in_key_TUSER, "(port)stream_in_key_TUSER");
    sc_trace(mVcdFile, stream_in_key_TLAST, "(port)stream_in_key_TLAST");
    sc_trace(mVcdFile, stream_in_key_TID, "(port)stream_in_key_TID");
    sc_trace(mVcdFile, stream_in_key_TDEST, "(port)stream_in_key_TDEST");
    sc_trace(mVcdFile, stream_out_TDATA, "(port)stream_out_TDATA");
    sc_trace(mVcdFile, stream_out_TVALID, "(port)stream_out_TVALID");
    sc_trace(mVcdFile, stream_out_TREADY, "(port)stream_out_TREADY");
    sc_trace(mVcdFile, stream_out_TKEEP, "(port)stream_out_TKEEP");
    sc_trace(mVcdFile, stream_out_TSTRB, "(port)stream_out_TSTRB");
    sc_trace(mVcdFile, stream_out_TUSER, "(port)stream_out_TUSER");
    sc_trace(mVcdFile, stream_out_TLAST, "(port)stream_out_TLAST");
    sc_trace(mVcdFile, stream_out_TID, "(port)stream_out_TID");
    sc_trace(mVcdFile, stream_out_TDEST, "(port)stream_out_TDEST");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_data_out, "stream_in_text_V_data_V_0_data_out");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_vld_in, "stream_in_text_V_data_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_vld_out, "stream_in_text_V_data_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_ack_in, "stream_in_text_V_data_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_ack_out, "stream_in_text_V_data_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_payload_A, "stream_in_text_V_data_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_payload_B, "stream_in_text_V_data_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_sel_rd, "stream_in_text_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_sel_wr, "stream_in_text_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_sel, "stream_in_text_V_data_V_0_sel");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_load_A, "stream_in_text_V_data_V_0_load_A");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_load_B, "stream_in_text_V_data_V_0_load_B");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_state, "stream_in_text_V_data_V_0_state");
    sc_trace(mVcdFile, stream_in_text_V_data_V_0_state_cmp_full, "stream_in_text_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_data_out, "stream_in_text_V_keep_V_0_data_out");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_vld_in, "stream_in_text_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_vld_out, "stream_in_text_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_ack_in, "stream_in_text_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_ack_out, "stream_in_text_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_payload_A, "stream_in_text_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_payload_B, "stream_in_text_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_sel_rd, "stream_in_text_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_sel_wr, "stream_in_text_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_sel, "stream_in_text_V_keep_V_0_sel");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_load_A, "stream_in_text_V_keep_V_0_load_A");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_load_B, "stream_in_text_V_keep_V_0_load_B");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_state, "stream_in_text_V_keep_V_0_state");
    sc_trace(mVcdFile, stream_in_text_V_keep_V_0_state_cmp_full, "stream_in_text_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_data_out, "stream_in_text_V_strb_V_0_data_out");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_vld_in, "stream_in_text_V_strb_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_vld_out, "stream_in_text_V_strb_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_ack_in, "stream_in_text_V_strb_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_ack_out, "stream_in_text_V_strb_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_payload_A, "stream_in_text_V_strb_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_payload_B, "stream_in_text_V_strb_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_sel_rd, "stream_in_text_V_strb_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_sel_wr, "stream_in_text_V_strb_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_sel, "stream_in_text_V_strb_V_0_sel");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_load_A, "stream_in_text_V_strb_V_0_load_A");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_load_B, "stream_in_text_V_strb_V_0_load_B");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_state, "stream_in_text_V_strb_V_0_state");
    sc_trace(mVcdFile, stream_in_text_V_strb_V_0_state_cmp_full, "stream_in_text_V_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_data_out, "stream_in_text_V_user_V_0_data_out");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_vld_in, "stream_in_text_V_user_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_vld_out, "stream_in_text_V_user_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_ack_in, "stream_in_text_V_user_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_ack_out, "stream_in_text_V_user_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_payload_A, "stream_in_text_V_user_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_payload_B, "stream_in_text_V_user_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_sel_rd, "stream_in_text_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_sel_wr, "stream_in_text_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_sel, "stream_in_text_V_user_V_0_sel");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_load_A, "stream_in_text_V_user_V_0_load_A");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_load_B, "stream_in_text_V_user_V_0_load_B");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_state, "stream_in_text_V_user_V_0_state");
    sc_trace(mVcdFile, stream_in_text_V_user_V_0_state_cmp_full, "stream_in_text_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_data_out, "stream_in_text_V_last_V_0_data_out");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_vld_in, "stream_in_text_V_last_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_vld_out, "stream_in_text_V_last_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_ack_in, "stream_in_text_V_last_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_ack_out, "stream_in_text_V_last_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_payload_A, "stream_in_text_V_last_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_payload_B, "stream_in_text_V_last_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_sel_rd, "stream_in_text_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_sel_wr, "stream_in_text_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_sel, "stream_in_text_V_last_V_0_sel");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_load_A, "stream_in_text_V_last_V_0_load_A");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_load_B, "stream_in_text_V_last_V_0_load_B");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_state, "stream_in_text_V_last_V_0_state");
    sc_trace(mVcdFile, stream_in_text_V_last_V_0_state_cmp_full, "stream_in_text_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_data_out, "stream_in_text_V_id_V_0_data_out");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_vld_in, "stream_in_text_V_id_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_vld_out, "stream_in_text_V_id_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_ack_in, "stream_in_text_V_id_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_ack_out, "stream_in_text_V_id_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_payload_A, "stream_in_text_V_id_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_payload_B, "stream_in_text_V_id_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_sel_rd, "stream_in_text_V_id_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_sel_wr, "stream_in_text_V_id_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_sel, "stream_in_text_V_id_V_0_sel");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_load_A, "stream_in_text_V_id_V_0_load_A");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_load_B, "stream_in_text_V_id_V_0_load_B");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_state, "stream_in_text_V_id_V_0_state");
    sc_trace(mVcdFile, stream_in_text_V_id_V_0_state_cmp_full, "stream_in_text_V_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_data_out, "stream_in_text_V_dest_V_0_data_out");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_vld_in, "stream_in_text_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_vld_out, "stream_in_text_V_dest_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_ack_in, "stream_in_text_V_dest_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_ack_out, "stream_in_text_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_payload_A, "stream_in_text_V_dest_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_payload_B, "stream_in_text_V_dest_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_sel_rd, "stream_in_text_V_dest_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_sel_wr, "stream_in_text_V_dest_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_sel, "stream_in_text_V_dest_V_0_sel");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_load_A, "stream_in_text_V_dest_V_0_load_A");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_load_B, "stream_in_text_V_dest_V_0_load_B");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_state, "stream_in_text_V_dest_V_0_state");
    sc_trace(mVcdFile, stream_in_text_V_dest_V_0_state_cmp_full, "stream_in_text_V_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_data_out, "stream_in_key_V_data_V_0_data_out");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_vld_in, "stream_in_key_V_data_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_vld_out, "stream_in_key_V_data_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_ack_in, "stream_in_key_V_data_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_ack_out, "stream_in_key_V_data_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_payload_A, "stream_in_key_V_data_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_payload_B, "stream_in_key_V_data_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_sel_rd, "stream_in_key_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_sel_wr, "stream_in_key_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_sel, "stream_in_key_V_data_V_0_sel");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_load_A, "stream_in_key_V_data_V_0_load_A");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_load_B, "stream_in_key_V_data_V_0_load_B");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_state, "stream_in_key_V_data_V_0_state");
    sc_trace(mVcdFile, stream_in_key_V_data_V_0_state_cmp_full, "stream_in_key_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_data_out, "stream_in_key_V_keep_V_0_data_out");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_vld_in, "stream_in_key_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_vld_out, "stream_in_key_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_ack_in, "stream_in_key_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_ack_out, "stream_in_key_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_payload_A, "stream_in_key_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_payload_B, "stream_in_key_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_sel_rd, "stream_in_key_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_sel_wr, "stream_in_key_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_sel, "stream_in_key_V_keep_V_0_sel");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_load_A, "stream_in_key_V_keep_V_0_load_A");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_load_B, "stream_in_key_V_keep_V_0_load_B");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_state, "stream_in_key_V_keep_V_0_state");
    sc_trace(mVcdFile, stream_in_key_V_keep_V_0_state_cmp_full, "stream_in_key_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_data_out, "stream_in_key_V_strb_V_0_data_out");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_vld_in, "stream_in_key_V_strb_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_vld_out, "stream_in_key_V_strb_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_ack_in, "stream_in_key_V_strb_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_ack_out, "stream_in_key_V_strb_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_payload_A, "stream_in_key_V_strb_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_payload_B, "stream_in_key_V_strb_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_sel_rd, "stream_in_key_V_strb_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_sel_wr, "stream_in_key_V_strb_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_sel, "stream_in_key_V_strb_V_0_sel");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_load_A, "stream_in_key_V_strb_V_0_load_A");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_load_B, "stream_in_key_V_strb_V_0_load_B");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_state, "stream_in_key_V_strb_V_0_state");
    sc_trace(mVcdFile, stream_in_key_V_strb_V_0_state_cmp_full, "stream_in_key_V_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_data_out, "stream_in_key_V_user_V_0_data_out");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_vld_in, "stream_in_key_V_user_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_vld_out, "stream_in_key_V_user_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_ack_in, "stream_in_key_V_user_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_ack_out, "stream_in_key_V_user_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_payload_A, "stream_in_key_V_user_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_payload_B, "stream_in_key_V_user_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_sel_rd, "stream_in_key_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_sel_wr, "stream_in_key_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_sel, "stream_in_key_V_user_V_0_sel");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_load_A, "stream_in_key_V_user_V_0_load_A");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_load_B, "stream_in_key_V_user_V_0_load_B");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_state, "stream_in_key_V_user_V_0_state");
    sc_trace(mVcdFile, stream_in_key_V_user_V_0_state_cmp_full, "stream_in_key_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_data_out, "stream_in_key_V_last_V_0_data_out");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_vld_in, "stream_in_key_V_last_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_vld_out, "stream_in_key_V_last_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_ack_in, "stream_in_key_V_last_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_ack_out, "stream_in_key_V_last_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_payload_A, "stream_in_key_V_last_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_payload_B, "stream_in_key_V_last_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_sel_rd, "stream_in_key_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_sel_wr, "stream_in_key_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_sel, "stream_in_key_V_last_V_0_sel");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_load_A, "stream_in_key_V_last_V_0_load_A");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_load_B, "stream_in_key_V_last_V_0_load_B");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_state, "stream_in_key_V_last_V_0_state");
    sc_trace(mVcdFile, stream_in_key_V_last_V_0_state_cmp_full, "stream_in_key_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_data_out, "stream_in_key_V_id_V_0_data_out");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_vld_in, "stream_in_key_V_id_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_vld_out, "stream_in_key_V_id_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_ack_in, "stream_in_key_V_id_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_ack_out, "stream_in_key_V_id_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_payload_A, "stream_in_key_V_id_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_payload_B, "stream_in_key_V_id_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_sel_rd, "stream_in_key_V_id_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_sel_wr, "stream_in_key_V_id_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_sel, "stream_in_key_V_id_V_0_sel");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_load_A, "stream_in_key_V_id_V_0_load_A");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_load_B, "stream_in_key_V_id_V_0_load_B");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_state, "stream_in_key_V_id_V_0_state");
    sc_trace(mVcdFile, stream_in_key_V_id_V_0_state_cmp_full, "stream_in_key_V_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_data_out, "stream_in_key_V_dest_V_0_data_out");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_vld_in, "stream_in_key_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_vld_out, "stream_in_key_V_dest_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_ack_in, "stream_in_key_V_dest_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_ack_out, "stream_in_key_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_payload_A, "stream_in_key_V_dest_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_payload_B, "stream_in_key_V_dest_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_sel_rd, "stream_in_key_V_dest_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_sel_wr, "stream_in_key_V_dest_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_sel, "stream_in_key_V_dest_V_0_sel");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_load_A, "stream_in_key_V_dest_V_0_load_A");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_load_B, "stream_in_key_V_dest_V_0_load_B");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_state, "stream_in_key_V_dest_V_0_state");
    sc_trace(mVcdFile, stream_in_key_V_dest_V_0_state_cmp_full, "stream_in_key_V_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_out_V_data_V_1_data_out, "stream_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, stream_out_V_data_V_1_vld_in, "stream_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_V_data_V_1_vld_out, "stream_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_V_data_V_1_ack_in, "stream_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_V_data_V_1_ack_out, "stream_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_V_data_V_1_payload_A, "stream_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_V_data_V_1_payload_B, "stream_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_V_data_V_1_sel_rd, "stream_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_V_data_V_1_sel_wr, "stream_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_V_data_V_1_sel, "stream_out_V_data_V_1_sel");
    sc_trace(mVcdFile, stream_out_V_data_V_1_load_A, "stream_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, stream_out_V_data_V_1_load_B, "stream_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, stream_out_V_data_V_1_state, "stream_out_V_data_V_1_state");
    sc_trace(mVcdFile, stream_out_V_data_V_1_state_cmp_full, "stream_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_data_out, "stream_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_vld_in, "stream_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_vld_out, "stream_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_ack_in, "stream_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_ack_out, "stream_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_payload_A, "stream_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_payload_B, "stream_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_sel_rd, "stream_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_sel_wr, "stream_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_sel, "stream_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_load_A, "stream_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_load_B, "stream_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_state, "stream_out_V_keep_V_1_state");
    sc_trace(mVcdFile, stream_out_V_keep_V_1_state_cmp_full, "stream_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_data_out, "stream_out_V_strb_V_1_data_out");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_vld_in, "stream_out_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_vld_out, "stream_out_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_ack_in, "stream_out_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_ack_out, "stream_out_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_payload_A, "stream_out_V_strb_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_payload_B, "stream_out_V_strb_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_sel_rd, "stream_out_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_sel_wr, "stream_out_V_strb_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_sel, "stream_out_V_strb_V_1_sel");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_load_A, "stream_out_V_strb_V_1_load_A");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_load_B, "stream_out_V_strb_V_1_load_B");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_state, "stream_out_V_strb_V_1_state");
    sc_trace(mVcdFile, stream_out_V_strb_V_1_state_cmp_full, "stream_out_V_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_V_user_V_1_data_out, "stream_out_V_user_V_1_data_out");
    sc_trace(mVcdFile, stream_out_V_user_V_1_vld_in, "stream_out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_V_user_V_1_vld_out, "stream_out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_V_user_V_1_ack_in, "stream_out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_V_user_V_1_ack_out, "stream_out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_V_user_V_1_payload_A, "stream_out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_V_user_V_1_payload_B, "stream_out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_V_user_V_1_sel_rd, "stream_out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_V_user_V_1_sel_wr, "stream_out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_V_user_V_1_sel, "stream_out_V_user_V_1_sel");
    sc_trace(mVcdFile, stream_out_V_user_V_1_load_A, "stream_out_V_user_V_1_load_A");
    sc_trace(mVcdFile, stream_out_V_user_V_1_load_B, "stream_out_V_user_V_1_load_B");
    sc_trace(mVcdFile, stream_out_V_user_V_1_state, "stream_out_V_user_V_1_state");
    sc_trace(mVcdFile, stream_out_V_user_V_1_state_cmp_full, "stream_out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_V_last_V_1_data_out, "stream_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, stream_out_V_last_V_1_vld_in, "stream_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_V_last_V_1_vld_out, "stream_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_V_last_V_1_ack_in, "stream_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_V_last_V_1_ack_out, "stream_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_V_last_V_1_payload_A, "stream_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_V_last_V_1_payload_B, "stream_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_V_last_V_1_sel_rd, "stream_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_V_last_V_1_sel_wr, "stream_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_V_last_V_1_sel, "stream_out_V_last_V_1_sel");
    sc_trace(mVcdFile, stream_out_V_last_V_1_load_A, "stream_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, stream_out_V_last_V_1_load_B, "stream_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, stream_out_V_last_V_1_state, "stream_out_V_last_V_1_state");
    sc_trace(mVcdFile, stream_out_V_last_V_1_state_cmp_full, "stream_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_V_id_V_1_data_out, "stream_out_V_id_V_1_data_out");
    sc_trace(mVcdFile, stream_out_V_id_V_1_vld_in, "stream_out_V_id_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_V_id_V_1_vld_out, "stream_out_V_id_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_V_id_V_1_ack_in, "stream_out_V_id_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_V_id_V_1_ack_out, "stream_out_V_id_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_V_id_V_1_payload_A, "stream_out_V_id_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_V_id_V_1_payload_B, "stream_out_V_id_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_V_id_V_1_sel_rd, "stream_out_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_V_id_V_1_sel_wr, "stream_out_V_id_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_V_id_V_1_sel, "stream_out_V_id_V_1_sel");
    sc_trace(mVcdFile, stream_out_V_id_V_1_load_A, "stream_out_V_id_V_1_load_A");
    sc_trace(mVcdFile, stream_out_V_id_V_1_load_B, "stream_out_V_id_V_1_load_B");
    sc_trace(mVcdFile, stream_out_V_id_V_1_state, "stream_out_V_id_V_1_state");
    sc_trace(mVcdFile, stream_out_V_id_V_1_state_cmp_full, "stream_out_V_id_V_1_state_cmp_full");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_data_out, "stream_out_V_dest_V_1_data_out");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_vld_in, "stream_out_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_vld_out, "stream_out_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_ack_in, "stream_out_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_ack_out, "stream_out_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_payload_A, "stream_out_V_dest_V_1_payload_A");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_payload_B, "stream_out_V_dest_V_1_payload_B");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_sel_rd, "stream_out_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_sel_wr, "stream_out_V_dest_V_1_sel_wr");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_sel, "stream_out_V_dest_V_1_sel");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_load_A, "stream_out_V_dest_V_1_load_A");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_load_B, "stream_out_V_dest_V_1_load_B");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_state, "stream_out_V_dest_V_1_state");
    sc_trace(mVcdFile, stream_out_V_dest_V_1_state_cmp_full, "stream_out_V_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, i_fu_251_p2, "i_fu_251_p2");
    sc_trace(mVcdFile, i_reg_348, "i_reg_348");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_60_cast_fu_265_p1, "tmp_60_cast_fu_265_p1");
    sc_trace(mVcdFile, tmp_60_cast_reg_353, "tmp_60_cast_reg_353");
    sc_trace(mVcdFile, exitcond11_i2_fu_245_p2, "exitcond11_i2_fu_245_p2");
    sc_trace(mVcdFile, j_fu_275_p2, "j_fu_275_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_fu_301_p2, "i_1_fu_301_p2");
    sc_trace(mVcdFile, i_1_reg_369, "i_1_reg_369");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_62_cast_fu_315_p1, "tmp_62_cast_fu_315_p1");
    sc_trace(mVcdFile, tmp_62_cast_reg_374, "tmp_62_cast_reg_374");
    sc_trace(mVcdFile, exitcond11_i_fu_295_p2, "exitcond11_i_fu_295_p2");
    sc_trace(mVcdFile, j_1_fu_325_p2, "j_1_fu_325_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, matrixText_data_V_address0, "matrixText_data_V_address0");
    sc_trace(mVcdFile, matrixText_data_V_ce0, "matrixText_data_V_ce0");
    sc_trace(mVcdFile, matrixText_data_V_we0, "matrixText_data_V_we0");
    sc_trace(mVcdFile, matrixText_data_V_d0, "matrixText_data_V_d0");
    sc_trace(mVcdFile, matrixText_data_V_q0, "matrixText_data_V_q0");
    sc_trace(mVcdFile, matrixText_data_V_address1, "matrixText_data_V_address1");
    sc_trace(mVcdFile, matrixText_data_V_ce1, "matrixText_data_V_ce1");
    sc_trace(mVcdFile, matrixText_data_V_we1, "matrixText_data_V_we1");
    sc_trace(mVcdFile, matrixText_data_V_d1, "matrixText_data_V_d1");
    sc_trace(mVcdFile, matrixText_data_V_q1, "matrixText_data_V_q1");
    sc_trace(mVcdFile, matrixKey_data_V_address0, "matrixKey_data_V_address0");
    sc_trace(mVcdFile, matrixKey_data_V_ce0, "matrixKey_data_V_ce0");
    sc_trace(mVcdFile, matrixKey_data_V_we0, "matrixKey_data_V_we0");
    sc_trace(mVcdFile, matrixKey_data_V_d0, "matrixKey_data_V_d0");
    sc_trace(mVcdFile, matrixKey_data_V_q0, "matrixKey_data_V_q0");
    sc_trace(mVcdFile, matrixKey_data_V_ce1, "matrixKey_data_V_ce1");
    sc_trace(mVcdFile, matrixKey_data_V_we1, "matrixKey_data_V_we1");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_ap_start, "grp_aesEncrypt_fu_174_ap_start");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_ap_done, "grp_aesEncrypt_fu_174_ap_done");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_ap_idle, "grp_aesEncrypt_fu_174_ap_idle");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_ap_ready, "grp_aesEncrypt_fu_174_ap_ready");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_address0, "grp_aesEncrypt_fu_174_state_data_V_address0");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_ce0, "grp_aesEncrypt_fu_174_state_data_V_ce0");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_we0, "grp_aesEncrypt_fu_174_state_data_V_we0");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_d0, "grp_aesEncrypt_fu_174_state_data_V_d0");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_address1, "grp_aesEncrypt_fu_174_state_data_V_address1");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_ce1, "grp_aesEncrypt_fu_174_state_data_V_ce1");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_we1, "grp_aesEncrypt_fu_174_state_data_V_we1");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_state_data_V_d1, "grp_aesEncrypt_fu_174_state_data_V_d1");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_masterKey_data_V_address0, "grp_aesEncrypt_fu_174_masterKey_data_V_address0");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_masterKey_data_V_ce0, "grp_aesEncrypt_fu_174_masterKey_data_V_ce0");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_ap_start, "grp_matrix2axi_fu_188_ap_start");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_ap_done, "grp_matrix2axi_fu_188_ap_done");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_ap_idle, "grp_matrix2axi_fu_188_ap_idle");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_ap_ready, "grp_matrix2axi_fu_188_ap_ready");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_state_data_V_address0, "grp_matrix2axi_fu_188_state_data_V_address0");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_state_data_V_ce0, "grp_matrix2axi_fu_188_state_data_V_ce0");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_state_data_V_address1, "grp_matrix2axi_fu_188_state_data_V_address1");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_state_data_V_ce1, "grp_matrix2axi_fu_188_state_data_V_ce1");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TDATA, "grp_matrix2axi_fu_188_stream_out_TDATA");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TVALID, "grp_matrix2axi_fu_188_stream_out_TVALID");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TREADY, "grp_matrix2axi_fu_188_stream_out_TREADY");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TKEEP, "grp_matrix2axi_fu_188_stream_out_TKEEP");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TSTRB, "grp_matrix2axi_fu_188_stream_out_TSTRB");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TUSER, "grp_matrix2axi_fu_188_stream_out_TUSER");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TLAST, "grp_matrix2axi_fu_188_stream_out_TLAST");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TID, "grp_matrix2axi_fu_188_stream_out_TID");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_stream_out_TDEST, "grp_matrix2axi_fu_188_stream_out_TDEST");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_ap_start, "grp_axi2matrix_fu_207_ap_start");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_ap_done, "grp_axi2matrix_fu_207_ap_done");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_ap_idle, "grp_axi2matrix_fu_207_ap_idle");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_ap_ready, "grp_axi2matrix_fu_207_ap_ready");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_stream_in_key_TVALID, "grp_axi2matrix_fu_207_stream_in_key_TVALID");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_stream_in_key_TREADY, "grp_axi2matrix_fu_207_stream_in_key_TREADY");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_address0, "grp_axi2matrix_fu_207_state_data_V_address0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_ce0, "grp_axi2matrix_fu_207_state_data_V_ce0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_we0, "grp_axi2matrix_fu_207_state_data_V_we0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_d0, "grp_axi2matrix_fu_207_state_data_V_d0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_address1, "grp_axi2matrix_fu_207_state_data_V_address1");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_ce1, "grp_axi2matrix_fu_207_state_data_V_ce1");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_we1, "grp_axi2matrix_fu_207_state_data_V_we1");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_state_data_V_d1, "grp_axi2matrix_fu_207_state_data_V_d1");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_ap_start, "grp_axi2matrix_fu_226_ap_start");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_ap_done, "grp_axi2matrix_fu_226_ap_done");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_ap_idle, "grp_axi2matrix_fu_226_ap_idle");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_ap_ready, "grp_axi2matrix_fu_226_ap_ready");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_stream_in_key_TVALID, "grp_axi2matrix_fu_226_stream_in_key_TVALID");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_stream_in_key_TREADY, "grp_axi2matrix_fu_226_stream_in_key_TREADY");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_address0, "grp_axi2matrix_fu_226_state_data_V_address0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_ce0, "grp_axi2matrix_fu_226_state_data_V_ce0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_we0, "grp_axi2matrix_fu_226_state_data_V_we0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_d0, "grp_axi2matrix_fu_226_state_data_V_d0");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_address1, "grp_axi2matrix_fu_226_state_data_V_address1");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_ce1, "grp_axi2matrix_fu_226_state_data_V_ce1");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_we1, "grp_axi2matrix_fu_226_state_data_V_we1");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_state_data_V_d1, "grp_axi2matrix_fu_226_state_data_V_d1");
    sc_trace(mVcdFile, i_0_i1_reg_130, "i_0_i1_reg_130");
    sc_trace(mVcdFile, exitcond_i6_fu_269_p2, "exitcond_i6_fu_269_p2");
    sc_trace(mVcdFile, j_0_i5_reg_141, "j_0_i5_reg_141");
    sc_trace(mVcdFile, i_0_i_reg_152, "i_0_i_reg_152");
    sc_trace(mVcdFile, exitcond_i_fu_319_p2, "exitcond_i_fu_319_p2");
    sc_trace(mVcdFile, j_0_i_reg_163, "j_0_i_reg_163");
    sc_trace(mVcdFile, grp_aesEncrypt_fu_174_ap_start_reg, "grp_aesEncrypt_fu_174_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_matrix2axi_fu_188_ap_start_reg, "grp_matrix2axi_fu_188_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_axi2matrix_fu_207_ap_start_reg, "grp_axi2matrix_fu_207_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_axi2matrix_fu_226_ap_start_reg, "grp_axi2matrix_fu_226_ap_start_reg");
    sc_trace(mVcdFile, tmp_63_cast_fu_290_p1, "tmp_63_cast_fu_290_p1");
    sc_trace(mVcdFile, tmp_64_cast_fu_340_p1, "tmp_64_cast_fu_340_p1");
    sc_trace(mVcdFile, tmp_fu_257_p3, "tmp_fu_257_p3");
    sc_trace(mVcdFile, tmp_cast_fu_281_p1, "tmp_cast_fu_281_p1");
    sc_trace(mVcdFile, tmp_24_fu_285_p2, "tmp_24_fu_285_p2");
    sc_trace(mVcdFile, tmp_s_fu_307_p3, "tmp_s_fu_307_p3");
    sc_trace(mVcdFile, tmp_20_cast_fu_331_p1, "tmp_20_cast_fu_331_p1");
    sc_trace(mVcdFile, tmp_25_fu_335_p2, "tmp_25_fu_335_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state6_on_subcall_done, "ap_block_state6_on_subcall_done");
#endif

    }
    mHdltvinHandle.open("AESEncrypt_TopFunction.hdltvin.dat");
    mHdltvoutHandle.open("AESEncrypt_TopFunction.hdltvout.dat");
}

AESEncrypt_TopFunction::~AESEncrypt_TopFunction() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete AESEncrypt_TopFunction_control_s_axi_U;
    delete matrixText_data_V_U;
    delete matrixKey_data_V_U;
    delete grp_aesEncrypt_fu_174;
    delete grp_matrix2axi_fu_188;
    delete grp_axi2matrix_fu_207;
    delete grp_axi2matrix_fu_226;
}

void AESEncrypt_TopFunction::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void AESEncrypt_TopFunction::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_aesEncrypt_fu_174_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_aesEncrypt_fu_174_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aesEncrypt_fu_174_ap_ready.read())) {
            grp_aesEncrypt_fu_174_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_axi2matrix_fu_207_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond11_i_fu_295_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            grp_axi2matrix_fu_207_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_axi2matrix_fu_207_ap_ready.read())) {
            grp_axi2matrix_fu_207_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_axi2matrix_fu_226_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond11_i_fu_295_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            grp_axi2matrix_fu_226_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_axi2matrix_fu_226_ap_ready.read())) {
            grp_axi2matrix_fu_226_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_matrix2axi_fu_188_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_matrix2axi_fu_188_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_matrix2axi_fu_188_ap_ready.read())) {
            grp_matrix2axi_fu_188_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_i6_fu_269_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_0_i1_reg_130 = i_reg_348.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i1_reg_130 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond11_i2_fu_245_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_0_i_reg_152 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(exitcond_i_fu_319_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i_0_i_reg_152 = i_1_reg_369.read();
    }
    if ((esl_seteq<1,1,1>(exitcond11_i2_fu_245_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_0_i5_reg_141 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(exitcond_i6_fu_269_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        j_0_i5_reg_141 = j_fu_275_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond11_i_fu_295_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        j_0_i_reg_163 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(exitcond_i_fu_319_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        j_0_i_reg_163 = j_1_fu_325_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_vld_out.read()))) {
            stream_in_key_V_data_V_0_sel_rd =  (sc_logic) (~stream_in_key_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_ack_in.read()))) {
            stream_in_key_V_data_V_0_sel_wr =  (sc_logic) (~stream_in_key_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_data_V_0_state.read())))) {
            stream_in_key_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_data_V_0_state.read())))) {
            stream_in_key_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_ack_out.read()))))) {
            stream_in_key_V_data_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_key_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_vld_out.read()))) {
            stream_in_key_V_dest_V_0_sel_rd =  (sc_logic) (~stream_in_key_V_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_ack_in.read()))) {
            stream_in_key_V_dest_V_0_sel_wr =  (sc_logic) (~stream_in_key_V_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_dest_V_0_state.read())))) {
            stream_in_key_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_dest_V_0_state.read())))) {
            stream_in_key_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_ack_out.read()))))) {
            stream_in_key_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_key_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_vld_out.read()))) {
            stream_in_key_V_id_V_0_sel_rd =  (sc_logic) (~stream_in_key_V_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_ack_in.read()))) {
            stream_in_key_V_id_V_0_sel_wr =  (sc_logic) (~stream_in_key_V_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_id_V_0_state.read())))) {
            stream_in_key_V_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_id_V_0_state.read())))) {
            stream_in_key_V_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_ack_out.read()))))) {
            stream_in_key_V_id_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_key_V_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_vld_out.read()))) {
            stream_in_key_V_keep_V_0_sel_rd =  (sc_logic) (~stream_in_key_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_ack_in.read()))) {
            stream_in_key_V_keep_V_0_sel_wr =  (sc_logic) (~stream_in_key_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_keep_V_0_state.read())))) {
            stream_in_key_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_keep_V_0_state.read())))) {
            stream_in_key_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_ack_out.read()))))) {
            stream_in_key_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_key_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_vld_out.read()))) {
            stream_in_key_V_last_V_0_sel_rd =  (sc_logic) (~stream_in_key_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_ack_in.read()))) {
            stream_in_key_V_last_V_0_sel_wr =  (sc_logic) (~stream_in_key_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_last_V_0_state.read())))) {
            stream_in_key_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_last_V_0_state.read())))) {
            stream_in_key_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_ack_out.read()))))) {
            stream_in_key_V_last_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_key_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_vld_out.read()))) {
            stream_in_key_V_strb_V_0_sel_rd =  (sc_logic) (~stream_in_key_V_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_ack_in.read()))) {
            stream_in_key_V_strb_V_0_sel_wr =  (sc_logic) (~stream_in_key_V_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_strb_V_0_state.read())))) {
            stream_in_key_V_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_strb_V_0_state.read())))) {
            stream_in_key_V_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_ack_out.read()))))) {
            stream_in_key_V_strb_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_key_V_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_vld_out.read()))) {
            stream_in_key_V_user_V_0_sel_rd =  (sc_logic) (~stream_in_key_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_ack_in.read()))) {
            stream_in_key_V_user_V_0_sel_wr =  (sc_logic) (~stream_in_key_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_key_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_user_V_0_state.read())))) {
            stream_in_key_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_user_V_0_state.read())))) {
            stream_in_key_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_key_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_key_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_key_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_key_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_ack_out.read()))))) {
            stream_in_key_V_user_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_key_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_vld_out.read()))) {
            stream_in_text_V_data_V_0_sel_rd =  (sc_logic) (~stream_in_text_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_ack_in.read()))) {
            stream_in_text_V_data_V_0_sel_wr =  (sc_logic) (~stream_in_text_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(stream_in_text_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(stream_in_text_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            stream_in_text_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_text_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_text_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            stream_in_text_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(stream_in_text_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_text_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(stream_in_text_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_ack_out.read()))))) {
            stream_in_text_V_data_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_text_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_vld_out.read()))) {
            stream_in_text_V_dest_V_0_sel_rd =  (sc_logic) (~stream_in_text_V_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_ack_in.read()))) {
            stream_in_text_V_dest_V_0_sel_wr =  (sc_logic) (~stream_in_text_V_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_dest_V_0_state.read())))) {
            stream_in_text_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_dest_V_0_state.read())))) {
            stream_in_text_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_ack_out.read()))))) {
            stream_in_text_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_text_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_vld_out.read()))) {
            stream_in_text_V_id_V_0_sel_rd =  (sc_logic) (~stream_in_text_V_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_ack_in.read()))) {
            stream_in_text_V_id_V_0_sel_wr =  (sc_logic) (~stream_in_text_V_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_id_V_0_state.read())))) {
            stream_in_text_V_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_id_V_0_state.read())))) {
            stream_in_text_V_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_ack_out.read()))))) {
            stream_in_text_V_id_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_text_V_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_vld_out.read()))) {
            stream_in_text_V_keep_V_0_sel_rd =  (sc_logic) (~stream_in_text_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_ack_in.read()))) {
            stream_in_text_V_keep_V_0_sel_wr =  (sc_logic) (~stream_in_text_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_keep_V_0_state.read())))) {
            stream_in_text_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_keep_V_0_state.read())))) {
            stream_in_text_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_ack_out.read()))))) {
            stream_in_text_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_text_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_vld_out.read()))) {
            stream_in_text_V_last_V_0_sel_rd =  (sc_logic) (~stream_in_text_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_ack_in.read()))) {
            stream_in_text_V_last_V_0_sel_wr =  (sc_logic) (~stream_in_text_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_last_V_0_state.read())))) {
            stream_in_text_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_last_V_0_state.read())))) {
            stream_in_text_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_ack_out.read()))))) {
            stream_in_text_V_last_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_text_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_vld_out.read()))) {
            stream_in_text_V_strb_V_0_sel_rd =  (sc_logic) (~stream_in_text_V_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_ack_in.read()))) {
            stream_in_text_V_strb_V_0_sel_wr =  (sc_logic) (~stream_in_text_V_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_strb_V_0_state.read())))) {
            stream_in_text_V_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_strb_V_0_state.read())))) {
            stream_in_text_V_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_ack_out.read()))))) {
            stream_in_text_V_strb_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_text_V_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_vld_out.read()))) {
            stream_in_text_V_user_V_0_sel_rd =  (sc_logic) (~stream_in_text_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_ack_in.read()))) {
            stream_in_text_V_user_V_0_sel_wr =  (sc_logic) (~stream_in_text_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_in_text_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_user_V_0_state.read())))) {
            stream_in_text_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_user_V_0_state.read())))) {
            stream_in_text_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_text_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_text_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_text_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_text_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_ack_out.read()))))) {
            stream_in_text_V_user_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_text_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_vld_out.read()))) {
            stream_out_V_data_V_1_sel_rd =  (sc_logic) (~stream_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_ack_in.read()))) {
            stream_out_V_data_V_1_sel_wr =  (sc_logic) (~stream_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_data_V_1_state.read())))) {
            stream_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_data_V_1_state.read())))) {
            stream_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_ack_out.read()))))) {
            stream_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_vld_out.read()))) {
            stream_out_V_dest_V_1_sel_rd =  (sc_logic) (~stream_out_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_ack_in.read()))) {
            stream_out_V_dest_V_1_sel_wr =  (sc_logic) (~stream_out_V_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_dest_V_1_state.read())))) {
            stream_out_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_dest_V_1_state.read())))) {
            stream_out_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_ack_out.read()))))) {
            stream_out_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_vld_out.read()))) {
            stream_out_V_id_V_1_sel_rd =  (sc_logic) (~stream_out_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_id_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_ack_in.read()))) {
            stream_out_V_id_V_1_sel_wr =  (sc_logic) (~stream_out_V_id_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_id_V_1_state.read())))) {
            stream_out_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_id_V_1_state.read())))) {
            stream_out_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_ack_out.read()))))) {
            stream_out_V_id_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_vld_out.read()))) {
            stream_out_V_keep_V_1_sel_rd =  (sc_logic) (~stream_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_ack_in.read()))) {
            stream_out_V_keep_V_1_sel_wr =  (sc_logic) (~stream_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_keep_V_1_state.read())))) {
            stream_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_keep_V_1_state.read())))) {
            stream_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_ack_out.read()))))) {
            stream_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_vld_out.read()))) {
            stream_out_V_last_V_1_sel_rd =  (sc_logic) (~stream_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_ack_in.read()))) {
            stream_out_V_last_V_1_sel_wr =  (sc_logic) (~stream_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_last_V_1_state.read())))) {
            stream_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_last_V_1_state.read())))) {
            stream_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_ack_out.read()))))) {
            stream_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_vld_out.read()))) {
            stream_out_V_strb_V_1_sel_rd =  (sc_logic) (~stream_out_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_ack_in.read()))) {
            stream_out_V_strb_V_1_sel_wr =  (sc_logic) (~stream_out_V_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_strb_V_1_state.read())))) {
            stream_out_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_strb_V_1_state.read())))) {
            stream_out_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_ack_out.read()))))) {
            stream_out_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_vld_out.read()))) {
            stream_out_V_user_V_1_sel_rd =  (sc_logic) (~stream_out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_ack_in.read()))) {
            stream_out_V_user_V_1_sel_wr =  (sc_logic) (~stream_out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        stream_out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_user_V_1_state.read())))) {
            stream_out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_user_V_1_state.read())))) {
            stream_out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_ack_out.read()))))) {
            stream_out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            stream_out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_reg_369 = i_1_fu_301_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_348 = i_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_load_A.read())) {
        stream_in_key_V_data_V_0_payload_A = stream_in_key_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_load_B.read())) {
        stream_in_key_V_data_V_0_payload_B = stream_in_key_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_load_A.read())) {
        stream_in_key_V_dest_V_0_payload_A = stream_in_key_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_load_B.read())) {
        stream_in_key_V_dest_V_0_payload_B = stream_in_key_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_load_A.read())) {
        stream_in_key_V_id_V_0_payload_A = stream_in_key_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_load_B.read())) {
        stream_in_key_V_id_V_0_payload_B = stream_in_key_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_load_A.read())) {
        stream_in_key_V_keep_V_0_payload_A = stream_in_key_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_load_B.read())) {
        stream_in_key_V_keep_V_0_payload_B = stream_in_key_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_load_A.read())) {
        stream_in_key_V_last_V_0_payload_A = stream_in_key_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_load_B.read())) {
        stream_in_key_V_last_V_0_payload_B = stream_in_key_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_load_A.read())) {
        stream_in_key_V_strb_V_0_payload_A = stream_in_key_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_load_B.read())) {
        stream_in_key_V_strb_V_0_payload_B = stream_in_key_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_load_A.read())) {
        stream_in_key_V_user_V_0_payload_A = stream_in_key_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_load_B.read())) {
        stream_in_key_V_user_V_0_payload_B = stream_in_key_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_load_A.read())) {
        stream_in_text_V_data_V_0_payload_A = stream_in_text_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_load_B.read())) {
        stream_in_text_V_data_V_0_payload_B = stream_in_text_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_load_A.read())) {
        stream_in_text_V_dest_V_0_payload_A = stream_in_text_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_load_B.read())) {
        stream_in_text_V_dest_V_0_payload_B = stream_in_text_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_load_A.read())) {
        stream_in_text_V_id_V_0_payload_A = stream_in_text_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_load_B.read())) {
        stream_in_text_V_id_V_0_payload_B = stream_in_text_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_load_A.read())) {
        stream_in_text_V_keep_V_0_payload_A = stream_in_text_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_load_B.read())) {
        stream_in_text_V_keep_V_0_payload_B = stream_in_text_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_load_A.read())) {
        stream_in_text_V_last_V_0_payload_A = stream_in_text_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_load_B.read())) {
        stream_in_text_V_last_V_0_payload_B = stream_in_text_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_load_A.read())) {
        stream_in_text_V_strb_V_0_payload_A = stream_in_text_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_load_B.read())) {
        stream_in_text_V_strb_V_0_payload_B = stream_in_text_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_load_A.read())) {
        stream_in_text_V_user_V_0_payload_A = stream_in_text_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_load_B.read())) {
        stream_in_text_V_user_V_0_payload_B = stream_in_text_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_load_A.read())) {
        stream_out_V_data_V_1_payload_A = grp_matrix2axi_fu_188_stream_out_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_load_B.read())) {
        stream_out_V_data_V_1_payload_B = grp_matrix2axi_fu_188_stream_out_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_load_A.read())) {
        stream_out_V_dest_V_1_payload_A = grp_matrix2axi_fu_188_stream_out_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_load_B.read())) {
        stream_out_V_dest_V_1_payload_B = grp_matrix2axi_fu_188_stream_out_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_load_A.read())) {
        stream_out_V_id_V_1_payload_A = grp_matrix2axi_fu_188_stream_out_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_load_B.read())) {
        stream_out_V_id_V_1_payload_B = grp_matrix2axi_fu_188_stream_out_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_load_A.read())) {
        stream_out_V_keep_V_1_payload_A = grp_matrix2axi_fu_188_stream_out_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_load_B.read())) {
        stream_out_V_keep_V_1_payload_B = grp_matrix2axi_fu_188_stream_out_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_load_A.read())) {
        stream_out_V_last_V_1_payload_A = grp_matrix2axi_fu_188_stream_out_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_load_B.read())) {
        stream_out_V_last_V_1_payload_B = grp_matrix2axi_fu_188_stream_out_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_load_A.read())) {
        stream_out_V_strb_V_1_payload_A = grp_matrix2axi_fu_188_stream_out_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_load_B.read())) {
        stream_out_V_strb_V_1_payload_B = grp_matrix2axi_fu_188_stream_out_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_load_A.read())) {
        stream_out_V_user_V_1_payload_A = grp_matrix2axi_fu_188_stream_out_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_load_B.read())) {
        stream_out_V_user_V_1_payload_B = grp_matrix2axi_fu_188_stream_out_TUSER.read();
    }
    if ((esl_seteq<1,1,1>(exitcond11_i2_fu_245_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_60_cast_reg_353 = tmp_60_cast_fu_265_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond11_i_fu_295_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_62_cast_reg_374 = tmp_62_cast_fu_315_p1.read();
    }
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void AESEncrypt_TopFunction::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void AESEncrypt_TopFunction::thread_ap_block_state11() {
    ap_block_state11 = (esl_seteq<1,1,1>(stream_out_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_user_V_1_ack_in.read(), ap_const_logic_0));
}

void AESEncrypt_TopFunction::thread_ap_block_state6_on_subcall_done() {
    ap_block_state6_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_axi2matrix_fu_207_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_axi2matrix_fu_226_ap_done.read()));
}

void AESEncrypt_TopFunction::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(stream_out_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_user_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(stream_out_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_user_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void AESEncrypt_TopFunction::thread_exitcond11_i2_fu_245_p2() {
    exitcond11_i2_fu_245_p2 = (!i_0_i1_reg_130.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i1_reg_130.read() == ap_const_lv3_4);
}

void AESEncrypt_TopFunction::thread_exitcond11_i_fu_295_p2() {
    exitcond11_i_fu_295_p2 = (!i_0_i_reg_152.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_152.read() == ap_const_lv3_4);
}

void AESEncrypt_TopFunction::thread_exitcond_i6_fu_269_p2() {
    exitcond_i6_fu_269_p2 = (!j_0_i5_reg_141.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i5_reg_141.read() == ap_const_lv3_4);
}

void AESEncrypt_TopFunction::thread_exitcond_i_fu_319_p2() {
    exitcond_i_fu_319_p2 = (!j_0_i_reg_163.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_163.read() == ap_const_lv3_4);
}

void AESEncrypt_TopFunction::thread_grp_aesEncrypt_fu_174_ap_start() {
    grp_aesEncrypt_fu_174_ap_start = grp_aesEncrypt_fu_174_ap_start_reg.read();
}

void AESEncrypt_TopFunction::thread_grp_axi2matrix_fu_207_ap_start() {
    grp_axi2matrix_fu_207_ap_start = grp_axi2matrix_fu_207_ap_start_reg.read();
}

void AESEncrypt_TopFunction::thread_grp_axi2matrix_fu_207_stream_in_key_TVALID() {
    grp_axi2matrix_fu_207_stream_in_key_TVALID = stream_in_text_V_dest_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_grp_axi2matrix_fu_226_ap_start() {
    grp_axi2matrix_fu_226_ap_start = grp_axi2matrix_fu_226_ap_start_reg.read();
}

void AESEncrypt_TopFunction::thread_grp_axi2matrix_fu_226_stream_in_key_TVALID() {
    grp_axi2matrix_fu_226_stream_in_key_TVALID = stream_in_key_V_dest_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_grp_matrix2axi_fu_188_ap_start() {
    grp_matrix2axi_fu_188_ap_start = grp_matrix2axi_fu_188_ap_start_reg.read();
}

void AESEncrypt_TopFunction::thread_grp_matrix2axi_fu_188_stream_out_TREADY() {
    grp_matrix2axi_fu_188_stream_out_TREADY = stream_out_V_dest_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_i_1_fu_301_p2() {
    i_1_fu_301_p2 = (!i_0_i_reg_152.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_i_reg_152.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AESEncrypt_TopFunction::thread_i_fu_251_p2() {
    i_fu_251_p2 = (!i_0_i1_reg_130.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_i1_reg_130.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AESEncrypt_TopFunction::thread_j_1_fu_325_p2() {
    j_1_fu_325_p2 = (!j_0_i_reg_163.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_i_reg_163.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AESEncrypt_TopFunction::thread_j_fu_275_p2() {
    j_fu_275_p2 = (!j_0_i5_reg_141.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_i5_reg_141.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AESEncrypt_TopFunction::thread_matrixKey_data_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        matrixKey_data_V_address0 =  (sc_lv<4>) (tmp_64_cast_fu_340_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixKey_data_V_address0 = grp_axi2matrix_fu_226_state_data_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixKey_data_V_address0 = grp_aesEncrypt_fu_174_masterKey_data_V_address0.read();
    } else {
        matrixKey_data_V_address0 = "XXXX";
    }
}

void AESEncrypt_TopFunction::thread_matrixKey_data_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        matrixKey_data_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixKey_data_V_ce0 = grp_axi2matrix_fu_226_state_data_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixKey_data_V_ce0 = grp_aesEncrypt_fu_174_masterKey_data_V_ce0.read();
    } else {
        matrixKey_data_V_ce0 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_matrixKey_data_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixKey_data_V_ce1 = grp_axi2matrix_fu_226_state_data_V_ce1.read();
    } else {
        matrixKey_data_V_ce1 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_matrixKey_data_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        matrixKey_data_V_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixKey_data_V_d0 = grp_axi2matrix_fu_226_state_data_V_d0.read();
    } else {
        matrixKey_data_V_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AESEncrypt_TopFunction::thread_matrixKey_data_V_we0() {
    if ((esl_seteq<1,1,1>(exitcond_i_fu_319_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        matrixKey_data_V_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixKey_data_V_we0 = grp_axi2matrix_fu_226_state_data_V_we0.read();
    } else {
        matrixKey_data_V_we0 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_matrixKey_data_V_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixKey_data_V_we1 = grp_axi2matrix_fu_226_state_data_V_we1.read();
    } else {
        matrixKey_data_V_we1 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        matrixText_data_V_address0 =  (sc_lv<4>) (tmp_63_cast_fu_290_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_address0 = grp_axi2matrix_fu_207_state_data_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        matrixText_data_V_address0 = grp_matrix2axi_fu_188_state_data_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_address0 = grp_aesEncrypt_fu_174_state_data_V_address0.read();
    } else {
        matrixText_data_V_address0 = "XXXX";
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_address1 = grp_axi2matrix_fu_207_state_data_V_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        matrixText_data_V_address1 = grp_matrix2axi_fu_188_state_data_V_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_address1 = grp_aesEncrypt_fu_174_state_data_V_address1.read();
    } else {
        matrixText_data_V_address1 = "XXXX";
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        matrixText_data_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_ce0 = grp_axi2matrix_fu_207_state_data_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        matrixText_data_V_ce0 = grp_matrix2axi_fu_188_state_data_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_ce0 = grp_aesEncrypt_fu_174_state_data_V_ce0.read();
    } else {
        matrixText_data_V_ce0 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_ce1 = grp_axi2matrix_fu_207_state_data_V_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        matrixText_data_V_ce1 = grp_matrix2axi_fu_188_state_data_V_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_ce1 = grp_aesEncrypt_fu_174_state_data_V_ce1.read();
    } else {
        matrixText_data_V_ce1 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        matrixText_data_V_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_d0 = grp_axi2matrix_fu_207_state_data_V_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_d0 = grp_aesEncrypt_fu_174_state_data_V_d0.read();
    } else {
        matrixText_data_V_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_d1 = grp_axi2matrix_fu_207_state_data_V_d1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_d1 = grp_aesEncrypt_fu_174_state_data_V_d1.read();
    } else {
        matrixText_data_V_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_we0() {
    if ((esl_seteq<1,1,1>(exitcond_i6_fu_269_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        matrixText_data_V_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_we0 = grp_axi2matrix_fu_207_state_data_V_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_we0 = grp_aesEncrypt_fu_174_state_data_V_we0.read();
    } else {
        matrixText_data_V_we0 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_matrixText_data_V_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrixText_data_V_we1 = grp_axi2matrix_fu_207_state_data_V_we1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        matrixText_data_V_we1 = grp_aesEncrypt_fu_174_state_data_V_we1.read();
    } else {
        matrixText_data_V_we1 = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_TREADY() {
    stream_in_key_TREADY = stream_in_key_V_dest_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_ack_in() {
    stream_in_key_V_data_V_0_ack_in = stream_in_key_V_data_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_key_V_data_V_0_ack_out = grp_axi2matrix_fu_226_stream_in_key_TREADY.read();
    } else {
        stream_in_key_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_data_V_0_sel.read())) {
        stream_in_key_V_data_V_0_data_out = stream_in_key_V_data_V_0_payload_B.read();
    } else {
        stream_in_key_V_data_V_0_data_out = stream_in_key_V_data_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_load_A() {
    stream_in_key_V_data_V_0_load_A = (stream_in_key_V_data_V_0_state_cmp_full.read() & ~stream_in_key_V_data_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_load_B() {
    stream_in_key_V_data_V_0_load_B = (stream_in_key_V_data_V_0_sel_wr.read() & stream_in_key_V_data_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_sel() {
    stream_in_key_V_data_V_0_sel = stream_in_key_V_data_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_state_cmp_full() {
    stream_in_key_V_data_V_0_state_cmp_full =  (sc_logic) ((!stream_in_key_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_key_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_vld_in() {
    stream_in_key_V_data_V_0_vld_in = stream_in_key_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_data_V_0_vld_out() {
    stream_in_key_V_data_V_0_vld_out = stream_in_key_V_data_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_ack_in() {
    stream_in_key_V_dest_V_0_ack_in = stream_in_key_V_dest_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_key_V_dest_V_0_ack_out = grp_axi2matrix_fu_226_stream_in_key_TREADY.read();
    } else {
        stream_in_key_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_dest_V_0_sel.read())) {
        stream_in_key_V_dest_V_0_data_out = stream_in_key_V_dest_V_0_payload_B.read();
    } else {
        stream_in_key_V_dest_V_0_data_out = stream_in_key_V_dest_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_load_A() {
    stream_in_key_V_dest_V_0_load_A = (stream_in_key_V_dest_V_0_state_cmp_full.read() & ~stream_in_key_V_dest_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_load_B() {
    stream_in_key_V_dest_V_0_load_B = (stream_in_key_V_dest_V_0_sel_wr.read() & stream_in_key_V_dest_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_sel() {
    stream_in_key_V_dest_V_0_sel = stream_in_key_V_dest_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_state_cmp_full() {
    stream_in_key_V_dest_V_0_state_cmp_full =  (sc_logic) ((!stream_in_key_V_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_key_V_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_vld_in() {
    stream_in_key_V_dest_V_0_vld_in = stream_in_key_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_dest_V_0_vld_out() {
    stream_in_key_V_dest_V_0_vld_out = stream_in_key_V_dest_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_ack_in() {
    stream_in_key_V_id_V_0_ack_in = stream_in_key_V_id_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_key_V_id_V_0_ack_out = grp_axi2matrix_fu_226_stream_in_key_TREADY.read();
    } else {
        stream_in_key_V_id_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_id_V_0_sel.read())) {
        stream_in_key_V_id_V_0_data_out = stream_in_key_V_id_V_0_payload_B.read();
    } else {
        stream_in_key_V_id_V_0_data_out = stream_in_key_V_id_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_load_A() {
    stream_in_key_V_id_V_0_load_A = (stream_in_key_V_id_V_0_state_cmp_full.read() & ~stream_in_key_V_id_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_load_B() {
    stream_in_key_V_id_V_0_load_B = (stream_in_key_V_id_V_0_sel_wr.read() & stream_in_key_V_id_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_sel() {
    stream_in_key_V_id_V_0_sel = stream_in_key_V_id_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_state_cmp_full() {
    stream_in_key_V_id_V_0_state_cmp_full =  (sc_logic) ((!stream_in_key_V_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_key_V_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_vld_in() {
    stream_in_key_V_id_V_0_vld_in = stream_in_key_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_id_V_0_vld_out() {
    stream_in_key_V_id_V_0_vld_out = stream_in_key_V_id_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_ack_in() {
    stream_in_key_V_keep_V_0_ack_in = stream_in_key_V_keep_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_key_V_keep_V_0_ack_out = grp_axi2matrix_fu_226_stream_in_key_TREADY.read();
    } else {
        stream_in_key_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_keep_V_0_sel.read())) {
        stream_in_key_V_keep_V_0_data_out = stream_in_key_V_keep_V_0_payload_B.read();
    } else {
        stream_in_key_V_keep_V_0_data_out = stream_in_key_V_keep_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_load_A() {
    stream_in_key_V_keep_V_0_load_A = (stream_in_key_V_keep_V_0_state_cmp_full.read() & ~stream_in_key_V_keep_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_load_B() {
    stream_in_key_V_keep_V_0_load_B = (stream_in_key_V_keep_V_0_sel_wr.read() & stream_in_key_V_keep_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_sel() {
    stream_in_key_V_keep_V_0_sel = stream_in_key_V_keep_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_state_cmp_full() {
    stream_in_key_V_keep_V_0_state_cmp_full =  (sc_logic) ((!stream_in_key_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_key_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_vld_in() {
    stream_in_key_V_keep_V_0_vld_in = stream_in_key_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_keep_V_0_vld_out() {
    stream_in_key_V_keep_V_0_vld_out = stream_in_key_V_keep_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_ack_in() {
    stream_in_key_V_last_V_0_ack_in = stream_in_key_V_last_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_key_V_last_V_0_ack_out = grp_axi2matrix_fu_226_stream_in_key_TREADY.read();
    } else {
        stream_in_key_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_last_V_0_sel.read())) {
        stream_in_key_V_last_V_0_data_out = stream_in_key_V_last_V_0_payload_B.read();
    } else {
        stream_in_key_V_last_V_0_data_out = stream_in_key_V_last_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_load_A() {
    stream_in_key_V_last_V_0_load_A = (stream_in_key_V_last_V_0_state_cmp_full.read() & ~stream_in_key_V_last_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_load_B() {
    stream_in_key_V_last_V_0_load_B = (stream_in_key_V_last_V_0_sel_wr.read() & stream_in_key_V_last_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_sel() {
    stream_in_key_V_last_V_0_sel = stream_in_key_V_last_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_state_cmp_full() {
    stream_in_key_V_last_V_0_state_cmp_full =  (sc_logic) ((!stream_in_key_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_key_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_vld_in() {
    stream_in_key_V_last_V_0_vld_in = stream_in_key_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_last_V_0_vld_out() {
    stream_in_key_V_last_V_0_vld_out = stream_in_key_V_last_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_ack_in() {
    stream_in_key_V_strb_V_0_ack_in = stream_in_key_V_strb_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_key_V_strb_V_0_ack_out = grp_axi2matrix_fu_226_stream_in_key_TREADY.read();
    } else {
        stream_in_key_V_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_strb_V_0_sel.read())) {
        stream_in_key_V_strb_V_0_data_out = stream_in_key_V_strb_V_0_payload_B.read();
    } else {
        stream_in_key_V_strb_V_0_data_out = stream_in_key_V_strb_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_load_A() {
    stream_in_key_V_strb_V_0_load_A = (stream_in_key_V_strb_V_0_state_cmp_full.read() & ~stream_in_key_V_strb_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_load_B() {
    stream_in_key_V_strb_V_0_load_B = (stream_in_key_V_strb_V_0_sel_wr.read() & stream_in_key_V_strb_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_sel() {
    stream_in_key_V_strb_V_0_sel = stream_in_key_V_strb_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_state_cmp_full() {
    stream_in_key_V_strb_V_0_state_cmp_full =  (sc_logic) ((!stream_in_key_V_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_key_V_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_vld_in() {
    stream_in_key_V_strb_V_0_vld_in = stream_in_key_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_strb_V_0_vld_out() {
    stream_in_key_V_strb_V_0_vld_out = stream_in_key_V_strb_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_ack_in() {
    stream_in_key_V_user_V_0_ack_in = stream_in_key_V_user_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_key_V_user_V_0_ack_out = grp_axi2matrix_fu_226_stream_in_key_TREADY.read();
    } else {
        stream_in_key_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_key_V_user_V_0_sel.read())) {
        stream_in_key_V_user_V_0_data_out = stream_in_key_V_user_V_0_payload_B.read();
    } else {
        stream_in_key_V_user_V_0_data_out = stream_in_key_V_user_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_load_A() {
    stream_in_key_V_user_V_0_load_A = (stream_in_key_V_user_V_0_state_cmp_full.read() & ~stream_in_key_V_user_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_load_B() {
    stream_in_key_V_user_V_0_load_B = (stream_in_key_V_user_V_0_sel_wr.read() & stream_in_key_V_user_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_sel() {
    stream_in_key_V_user_V_0_sel = stream_in_key_V_user_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_state_cmp_full() {
    stream_in_key_V_user_V_0_state_cmp_full =  (sc_logic) ((!stream_in_key_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_key_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_vld_in() {
    stream_in_key_V_user_V_0_vld_in = stream_in_key_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_key_V_user_V_0_vld_out() {
    stream_in_key_V_user_V_0_vld_out = stream_in_key_V_user_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_TREADY() {
    stream_in_text_TREADY = stream_in_text_V_dest_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_ack_in() {
    stream_in_text_V_data_V_0_ack_in = stream_in_text_V_data_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_text_V_data_V_0_ack_out = grp_axi2matrix_fu_207_stream_in_key_TREADY.read();
    } else {
        stream_in_text_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_data_V_0_sel.read())) {
        stream_in_text_V_data_V_0_data_out = stream_in_text_V_data_V_0_payload_B.read();
    } else {
        stream_in_text_V_data_V_0_data_out = stream_in_text_V_data_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_load_A() {
    stream_in_text_V_data_V_0_load_A = (stream_in_text_V_data_V_0_state_cmp_full.read() & ~stream_in_text_V_data_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_load_B() {
    stream_in_text_V_data_V_0_load_B = (stream_in_text_V_data_V_0_sel_wr.read() & stream_in_text_V_data_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_sel() {
    stream_in_text_V_data_V_0_sel = stream_in_text_V_data_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_state_cmp_full() {
    stream_in_text_V_data_V_0_state_cmp_full =  (sc_logic) ((!stream_in_text_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_text_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_vld_in() {
    stream_in_text_V_data_V_0_vld_in = stream_in_text_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_data_V_0_vld_out() {
    stream_in_text_V_data_V_0_vld_out = stream_in_text_V_data_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_ack_in() {
    stream_in_text_V_dest_V_0_ack_in = stream_in_text_V_dest_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_text_V_dest_V_0_ack_out = grp_axi2matrix_fu_207_stream_in_key_TREADY.read();
    } else {
        stream_in_text_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_dest_V_0_sel.read())) {
        stream_in_text_V_dest_V_0_data_out = stream_in_text_V_dest_V_0_payload_B.read();
    } else {
        stream_in_text_V_dest_V_0_data_out = stream_in_text_V_dest_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_load_A() {
    stream_in_text_V_dest_V_0_load_A = (stream_in_text_V_dest_V_0_state_cmp_full.read() & ~stream_in_text_V_dest_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_load_B() {
    stream_in_text_V_dest_V_0_load_B = (stream_in_text_V_dest_V_0_sel_wr.read() & stream_in_text_V_dest_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_sel() {
    stream_in_text_V_dest_V_0_sel = stream_in_text_V_dest_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_state_cmp_full() {
    stream_in_text_V_dest_V_0_state_cmp_full =  (sc_logic) ((!stream_in_text_V_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_text_V_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_vld_in() {
    stream_in_text_V_dest_V_0_vld_in = stream_in_text_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_dest_V_0_vld_out() {
    stream_in_text_V_dest_V_0_vld_out = stream_in_text_V_dest_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_ack_in() {
    stream_in_text_V_id_V_0_ack_in = stream_in_text_V_id_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_text_V_id_V_0_ack_out = grp_axi2matrix_fu_207_stream_in_key_TREADY.read();
    } else {
        stream_in_text_V_id_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_id_V_0_sel.read())) {
        stream_in_text_V_id_V_0_data_out = stream_in_text_V_id_V_0_payload_B.read();
    } else {
        stream_in_text_V_id_V_0_data_out = stream_in_text_V_id_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_load_A() {
    stream_in_text_V_id_V_0_load_A = (stream_in_text_V_id_V_0_state_cmp_full.read() & ~stream_in_text_V_id_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_load_B() {
    stream_in_text_V_id_V_0_load_B = (stream_in_text_V_id_V_0_sel_wr.read() & stream_in_text_V_id_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_sel() {
    stream_in_text_V_id_V_0_sel = stream_in_text_V_id_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_state_cmp_full() {
    stream_in_text_V_id_V_0_state_cmp_full =  (sc_logic) ((!stream_in_text_V_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_text_V_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_vld_in() {
    stream_in_text_V_id_V_0_vld_in = stream_in_text_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_id_V_0_vld_out() {
    stream_in_text_V_id_V_0_vld_out = stream_in_text_V_id_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_ack_in() {
    stream_in_text_V_keep_V_0_ack_in = stream_in_text_V_keep_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_text_V_keep_V_0_ack_out = grp_axi2matrix_fu_207_stream_in_key_TREADY.read();
    } else {
        stream_in_text_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_keep_V_0_sel.read())) {
        stream_in_text_V_keep_V_0_data_out = stream_in_text_V_keep_V_0_payload_B.read();
    } else {
        stream_in_text_V_keep_V_0_data_out = stream_in_text_V_keep_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_load_A() {
    stream_in_text_V_keep_V_0_load_A = (stream_in_text_V_keep_V_0_state_cmp_full.read() & ~stream_in_text_V_keep_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_load_B() {
    stream_in_text_V_keep_V_0_load_B = (stream_in_text_V_keep_V_0_sel_wr.read() & stream_in_text_V_keep_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_sel() {
    stream_in_text_V_keep_V_0_sel = stream_in_text_V_keep_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_state_cmp_full() {
    stream_in_text_V_keep_V_0_state_cmp_full =  (sc_logic) ((!stream_in_text_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_text_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_vld_in() {
    stream_in_text_V_keep_V_0_vld_in = stream_in_text_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_keep_V_0_vld_out() {
    stream_in_text_V_keep_V_0_vld_out = stream_in_text_V_keep_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_ack_in() {
    stream_in_text_V_last_V_0_ack_in = stream_in_text_V_last_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_text_V_last_V_0_ack_out = grp_axi2matrix_fu_207_stream_in_key_TREADY.read();
    } else {
        stream_in_text_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_last_V_0_sel.read())) {
        stream_in_text_V_last_V_0_data_out = stream_in_text_V_last_V_0_payload_B.read();
    } else {
        stream_in_text_V_last_V_0_data_out = stream_in_text_V_last_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_load_A() {
    stream_in_text_V_last_V_0_load_A = (stream_in_text_V_last_V_0_state_cmp_full.read() & ~stream_in_text_V_last_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_load_B() {
    stream_in_text_V_last_V_0_load_B = (stream_in_text_V_last_V_0_sel_wr.read() & stream_in_text_V_last_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_sel() {
    stream_in_text_V_last_V_0_sel = stream_in_text_V_last_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_state_cmp_full() {
    stream_in_text_V_last_V_0_state_cmp_full =  (sc_logic) ((!stream_in_text_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_text_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_vld_in() {
    stream_in_text_V_last_V_0_vld_in = stream_in_text_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_last_V_0_vld_out() {
    stream_in_text_V_last_V_0_vld_out = stream_in_text_V_last_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_ack_in() {
    stream_in_text_V_strb_V_0_ack_in = stream_in_text_V_strb_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_text_V_strb_V_0_ack_out = grp_axi2matrix_fu_207_stream_in_key_TREADY.read();
    } else {
        stream_in_text_V_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_strb_V_0_sel.read())) {
        stream_in_text_V_strb_V_0_data_out = stream_in_text_V_strb_V_0_payload_B.read();
    } else {
        stream_in_text_V_strb_V_0_data_out = stream_in_text_V_strb_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_load_A() {
    stream_in_text_V_strb_V_0_load_A = (stream_in_text_V_strb_V_0_state_cmp_full.read() & ~stream_in_text_V_strb_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_load_B() {
    stream_in_text_V_strb_V_0_load_B = (stream_in_text_V_strb_V_0_sel_wr.read() & stream_in_text_V_strb_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_sel() {
    stream_in_text_V_strb_V_0_sel = stream_in_text_V_strb_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_state_cmp_full() {
    stream_in_text_V_strb_V_0_state_cmp_full =  (sc_logic) ((!stream_in_text_V_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_text_V_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_vld_in() {
    stream_in_text_V_strb_V_0_vld_in = stream_in_text_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_strb_V_0_vld_out() {
    stream_in_text_V_strb_V_0_vld_out = stream_in_text_V_strb_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_ack_in() {
    stream_in_text_V_user_V_0_ack_in = stream_in_text_V_user_V_0_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_ack_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        stream_in_text_V_user_V_0_ack_out = grp_axi2matrix_fu_207_stream_in_key_TREADY.read();
    } else {
        stream_in_text_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_text_V_user_V_0_sel.read())) {
        stream_in_text_V_user_V_0_data_out = stream_in_text_V_user_V_0_payload_B.read();
    } else {
        stream_in_text_V_user_V_0_data_out = stream_in_text_V_user_V_0_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_load_A() {
    stream_in_text_V_user_V_0_load_A = (stream_in_text_V_user_V_0_state_cmp_full.read() & ~stream_in_text_V_user_V_0_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_load_B() {
    stream_in_text_V_user_V_0_load_B = (stream_in_text_V_user_V_0_sel_wr.read() & stream_in_text_V_user_V_0_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_sel() {
    stream_in_text_V_user_V_0_sel = stream_in_text_V_user_V_0_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_state_cmp_full() {
    stream_in_text_V_user_V_0_state_cmp_full =  (sc_logic) ((!stream_in_text_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_text_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_vld_in() {
    stream_in_text_V_user_V_0_vld_in = stream_in_text_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_in_text_V_user_V_0_vld_out() {
    stream_in_text_V_user_V_0_vld_out = stream_in_text_V_user_V_0_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_TDATA() {
    stream_out_TDATA = stream_out_V_data_V_1_data_out.read();
}

void AESEncrypt_TopFunction::thread_stream_out_TDEST() {
    stream_out_TDEST = stream_out_V_dest_V_1_data_out.read();
}

void AESEncrypt_TopFunction::thread_stream_out_TID() {
    stream_out_TID = stream_out_V_id_V_1_data_out.read();
}

void AESEncrypt_TopFunction::thread_stream_out_TKEEP() {
    stream_out_TKEEP = stream_out_V_keep_V_1_data_out.read();
}

void AESEncrypt_TopFunction::thread_stream_out_TLAST() {
    stream_out_TLAST = stream_out_V_last_V_1_data_out.read();
}

void AESEncrypt_TopFunction::thread_stream_out_TSTRB() {
    stream_out_TSTRB = stream_out_V_strb_V_1_data_out.read();
}

void AESEncrypt_TopFunction::thread_stream_out_TUSER() {
    stream_out_TUSER = stream_out_V_user_V_1_data_out.read();
}

void AESEncrypt_TopFunction::thread_stream_out_TVALID() {
    stream_out_TVALID = stream_out_V_dest_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_ack_in() {
    stream_out_V_data_V_1_ack_in = stream_out_V_data_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_ack_out() {
    stream_out_V_data_V_1_ack_out = stream_out_TREADY.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_data_V_1_sel.read())) {
        stream_out_V_data_V_1_data_out = stream_out_V_data_V_1_payload_B.read();
    } else {
        stream_out_V_data_V_1_data_out = stream_out_V_data_V_1_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_load_A() {
    stream_out_V_data_V_1_load_A = (stream_out_V_data_V_1_state_cmp_full.read() & ~stream_out_V_data_V_1_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_load_B() {
    stream_out_V_data_V_1_load_B = (stream_out_V_data_V_1_sel_wr.read() & stream_out_V_data_V_1_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_sel() {
    stream_out_V_data_V_1_sel = stream_out_V_data_V_1_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_state_cmp_full() {
    stream_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!stream_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_vld_in() {
    stream_out_V_data_V_1_vld_in = grp_matrix2axi_fu_188_stream_out_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_data_V_1_vld_out() {
    stream_out_V_data_V_1_vld_out = stream_out_V_data_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_ack_in() {
    stream_out_V_dest_V_1_ack_in = stream_out_V_dest_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_ack_out() {
    stream_out_V_dest_V_1_ack_out = stream_out_TREADY.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_dest_V_1_sel.read())) {
        stream_out_V_dest_V_1_data_out = stream_out_V_dest_V_1_payload_B.read();
    } else {
        stream_out_V_dest_V_1_data_out = stream_out_V_dest_V_1_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_load_A() {
    stream_out_V_dest_V_1_load_A = (stream_out_V_dest_V_1_state_cmp_full.read() & ~stream_out_V_dest_V_1_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_load_B() {
    stream_out_V_dest_V_1_load_B = (stream_out_V_dest_V_1_sel_wr.read() & stream_out_V_dest_V_1_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_sel() {
    stream_out_V_dest_V_1_sel = stream_out_V_dest_V_1_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_state_cmp_full() {
    stream_out_V_dest_V_1_state_cmp_full =  (sc_logic) ((!stream_out_V_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_V_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_vld_in() {
    stream_out_V_dest_V_1_vld_in = grp_matrix2axi_fu_188_stream_out_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_dest_V_1_vld_out() {
    stream_out_V_dest_V_1_vld_out = stream_out_V_dest_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_ack_in() {
    stream_out_V_id_V_1_ack_in = stream_out_V_id_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_ack_out() {
    stream_out_V_id_V_1_ack_out = stream_out_TREADY.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_id_V_1_sel.read())) {
        stream_out_V_id_V_1_data_out = stream_out_V_id_V_1_payload_B.read();
    } else {
        stream_out_V_id_V_1_data_out = stream_out_V_id_V_1_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_load_A() {
    stream_out_V_id_V_1_load_A = (stream_out_V_id_V_1_state_cmp_full.read() & ~stream_out_V_id_V_1_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_load_B() {
    stream_out_V_id_V_1_load_B = (stream_out_V_id_V_1_sel_wr.read() & stream_out_V_id_V_1_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_sel() {
    stream_out_V_id_V_1_sel = stream_out_V_id_V_1_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_state_cmp_full() {
    stream_out_V_id_V_1_state_cmp_full =  (sc_logic) ((!stream_out_V_id_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_V_id_V_1_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_vld_in() {
    stream_out_V_id_V_1_vld_in = grp_matrix2axi_fu_188_stream_out_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_id_V_1_vld_out() {
    stream_out_V_id_V_1_vld_out = stream_out_V_id_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_ack_in() {
    stream_out_V_keep_V_1_ack_in = stream_out_V_keep_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_ack_out() {
    stream_out_V_keep_V_1_ack_out = stream_out_TREADY.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_keep_V_1_sel.read())) {
        stream_out_V_keep_V_1_data_out = stream_out_V_keep_V_1_payload_B.read();
    } else {
        stream_out_V_keep_V_1_data_out = stream_out_V_keep_V_1_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_load_A() {
    stream_out_V_keep_V_1_load_A = (stream_out_V_keep_V_1_state_cmp_full.read() & ~stream_out_V_keep_V_1_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_load_B() {
    stream_out_V_keep_V_1_load_B = (stream_out_V_keep_V_1_sel_wr.read() & stream_out_V_keep_V_1_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_sel() {
    stream_out_V_keep_V_1_sel = stream_out_V_keep_V_1_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_state_cmp_full() {
    stream_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!stream_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_vld_in() {
    stream_out_V_keep_V_1_vld_in = grp_matrix2axi_fu_188_stream_out_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_keep_V_1_vld_out() {
    stream_out_V_keep_V_1_vld_out = stream_out_V_keep_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_ack_in() {
    stream_out_V_last_V_1_ack_in = stream_out_V_last_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_ack_out() {
    stream_out_V_last_V_1_ack_out = stream_out_TREADY.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_last_V_1_sel.read())) {
        stream_out_V_last_V_1_data_out = stream_out_V_last_V_1_payload_B.read();
    } else {
        stream_out_V_last_V_1_data_out = stream_out_V_last_V_1_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_load_A() {
    stream_out_V_last_V_1_load_A = (stream_out_V_last_V_1_state_cmp_full.read() & ~stream_out_V_last_V_1_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_load_B() {
    stream_out_V_last_V_1_load_B = (stream_out_V_last_V_1_sel_wr.read() & stream_out_V_last_V_1_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_sel() {
    stream_out_V_last_V_1_sel = stream_out_V_last_V_1_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_state_cmp_full() {
    stream_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!stream_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_vld_in() {
    stream_out_V_last_V_1_vld_in = grp_matrix2axi_fu_188_stream_out_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_last_V_1_vld_out() {
    stream_out_V_last_V_1_vld_out = stream_out_V_last_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_ack_in() {
    stream_out_V_strb_V_1_ack_in = stream_out_V_strb_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_ack_out() {
    stream_out_V_strb_V_1_ack_out = stream_out_TREADY.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_strb_V_1_sel.read())) {
        stream_out_V_strb_V_1_data_out = stream_out_V_strb_V_1_payload_B.read();
    } else {
        stream_out_V_strb_V_1_data_out = stream_out_V_strb_V_1_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_load_A() {
    stream_out_V_strb_V_1_load_A = (stream_out_V_strb_V_1_state_cmp_full.read() & ~stream_out_V_strb_V_1_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_load_B() {
    stream_out_V_strb_V_1_load_B = (stream_out_V_strb_V_1_sel_wr.read() & stream_out_V_strb_V_1_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_sel() {
    stream_out_V_strb_V_1_sel = stream_out_V_strb_V_1_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_state_cmp_full() {
    stream_out_V_strb_V_1_state_cmp_full =  (sc_logic) ((!stream_out_V_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_V_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_vld_in() {
    stream_out_V_strb_V_1_vld_in = grp_matrix2axi_fu_188_stream_out_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_strb_V_1_vld_out() {
    stream_out_V_strb_V_1_vld_out = stream_out_V_strb_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_ack_in() {
    stream_out_V_user_V_1_ack_in = stream_out_V_user_V_1_state.read()[1];
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_ack_out() {
    stream_out_V_user_V_1_ack_out = stream_out_TREADY.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_out_V_user_V_1_sel.read())) {
        stream_out_V_user_V_1_data_out = stream_out_V_user_V_1_payload_B.read();
    } else {
        stream_out_V_user_V_1_data_out = stream_out_V_user_V_1_payload_A.read();
    }
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_load_A() {
    stream_out_V_user_V_1_load_A = (stream_out_V_user_V_1_state_cmp_full.read() & ~stream_out_V_user_V_1_sel_wr.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_load_B() {
    stream_out_V_user_V_1_load_B = (stream_out_V_user_V_1_sel_wr.read() & stream_out_V_user_V_1_state_cmp_full.read());
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_sel() {
    stream_out_V_user_V_1_sel = stream_out_V_user_V_1_sel_rd.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_state_cmp_full() {
    stream_out_V_user_V_1_state_cmp_full =  (sc_logic) ((!stream_out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_vld_in() {
    stream_out_V_user_V_1_vld_in = grp_matrix2axi_fu_188_stream_out_TVALID.read();
}

void AESEncrypt_TopFunction::thread_stream_out_V_user_V_1_vld_out() {
    stream_out_V_user_V_1_vld_out = stream_out_V_user_V_1_state.read()[0];
}

void AESEncrypt_TopFunction::thread_tmp_20_cast_fu_331_p1() {
    tmp_20_cast_fu_331_p1 = esl_zext<6,3>(j_0_i_reg_163.read());
}

void AESEncrypt_TopFunction::thread_tmp_24_fu_285_p2() {
    tmp_24_fu_285_p2 = (!tmp_60_cast_reg_353.read().is_01() || !tmp_cast_fu_281_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_60_cast_reg_353.read()) + sc_biguint<6>(tmp_cast_fu_281_p1.read()));
}

void AESEncrypt_TopFunction::thread_tmp_25_fu_335_p2() {
    tmp_25_fu_335_p2 = (!tmp_62_cast_reg_374.read().is_01() || !tmp_20_cast_fu_331_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_62_cast_reg_374.read()) + sc_biguint<6>(tmp_20_cast_fu_331_p1.read()));
}

void AESEncrypt_TopFunction::thread_tmp_60_cast_fu_265_p1() {
    tmp_60_cast_fu_265_p1 = esl_zext<6,5>(tmp_fu_257_p3.read());
}

void AESEncrypt_TopFunction::thread_tmp_62_cast_fu_315_p1() {
    tmp_62_cast_fu_315_p1 = esl_zext<6,5>(tmp_s_fu_307_p3.read());
}

void AESEncrypt_TopFunction::thread_tmp_63_cast_fu_290_p1() {
    tmp_63_cast_fu_290_p1 = esl_zext<64,6>(tmp_24_fu_285_p2.read());
}

void AESEncrypt_TopFunction::thread_tmp_64_cast_fu_340_p1() {
    tmp_64_cast_fu_340_p1 = esl_zext<64,6>(tmp_25_fu_335_p2.read());
}

void AESEncrypt_TopFunction::thread_tmp_cast_fu_281_p1() {
    tmp_cast_fu_281_p1 = esl_zext<6,3>(j_0_i5_reg_141.read());
}

void AESEncrypt_TopFunction::thread_tmp_fu_257_p3() {
    tmp_fu_257_p3 = esl_concat<3,2>(i_0_i1_reg_130.read(), ap_const_lv2_0);
}

void AESEncrypt_TopFunction::thread_tmp_s_fu_307_p3() {
    tmp_s_fu_307_p3 = esl_concat<3,2>(i_0_i_reg_152.read(), ap_const_lv2_0);
}

void AESEncrypt_TopFunction::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond11_i2_fu_245_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond_i6_fu_269_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond11_i_fu_295_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond_i_fu_319_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state6_on_subcall_done.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_aesEncrypt_fu_174_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_matrix2axi_fu_188_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(stream_out_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_data_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_user_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void AESEncrypt_TopFunction::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TDATA\" :  \"" << stream_in_text_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TVALID\" :  \"" << stream_in_text_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"stream_in_text_TREADY\" :  \"" << stream_in_text_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TKEEP\" :  \"" << stream_in_text_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TSTRB\" :  \"" << stream_in_text_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TUSER\" :  \"" << stream_in_text_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TLAST\" :  \"" << stream_in_text_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TID\" :  \"" << stream_in_text_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_text_TDEST\" :  \"" << stream_in_text_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TDATA\" :  \"" << stream_in_key_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TVALID\" :  \"" << stream_in_key_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_in_key_TREADY\" :  \"" << stream_in_key_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TKEEP\" :  \"" << stream_in_key_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TSTRB\" :  \"" << stream_in_key_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TUSER\" :  \"" << stream_in_key_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TLAST\" :  \"" << stream_in_key_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TID\" :  \"" << stream_in_key_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_key_TDEST\" :  \"" << stream_in_key_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TDATA\" :  \"" << stream_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TVALID\" :  \"" << stream_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_out_TREADY\" :  \"" << stream_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TKEEP\" :  \"" << stream_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TSTRB\" :  \"" << stream_out_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TUSER\" :  \"" << stream_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TLAST\" :  \"" << stream_out_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TID\" :  \"" << stream_out_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TDEST\" :  \"" << stream_out_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

